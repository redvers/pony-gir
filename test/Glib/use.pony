use @g_array_new[NullablePointer[_GArray]](zeroterminated: I32, clear: I32, elementsize: U32)
use @g_array_steal[Pointer[None]](array: NullablePointer[_GArray] tag, len: Pointer[U64] tag)
use @g_array_sized_new[NullablePointer[_GArray]](zeroterminated: I32, clear: I32, elementsize: U32, reservedsize: U32)
use @g_array_copy[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag)
use @g_array_free[Pointer[U8]](array: NullablePointer[_GArray] tag, freesegment: I32)
use @g_array_ref[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag)
use @g_array_unref[None](array: NullablePointer[_GArray] tag)
use @g_array_get_element_size[U32](array: NullablePointer[_GArray] tag)
use @g_array_append_vals[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, data: Pointer[None] tag, len: U32)
use @g_array_prepend_vals[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, data: Pointer[None] tag, len: U32)
use @g_array_insert_vals[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, index: U32, data: Pointer[None] tag, len: U32)
use @g_array_set_size[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, length: U32)
use @g_array_remove_index[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, index: U32)
use @g_array_remove_index_fast[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, index: U32)
use @g_array_remove_range[NullablePointer[_GArray]](array: NullablePointer[_GArray] tag, index: U32, length: U32)
use @g_array_sort[None](array: NullablePointer[_GArray] tag, comparefunc: Pointer[None] tag)
use @g_array_sort_with_data[None](array: NullablePointer[_GArray] tag, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_array_binary_search[I32](array: NullablePointer[_GArray] tag, target: Pointer[None] tag, comparefunc: Pointer[None] tag, outmatchindex: Pointer[U32] tag)
use @g_array_set_clear_func[None](array: NullablePointer[_GArray] tag, clearfunc: Pointer[None] tag)
use @g_ptr_array_new[NullablePointer[_GPtrArray]]()
use @g_ptr_array_new_with_free_func[NullablePointer[_GPtrArray]](elementfreefunc: Pointer[None] tag)
use @g_ptr_array_steal[NullablePointer[Pointer[None]]](array: NullablePointer[_GPtrArray] tag, len: Pointer[U64] tag)
use @g_ptr_array_copy[NullablePointer[_GPtrArray]](array: NullablePointer[_GPtrArray] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_ptr_array_sized_new[NullablePointer[_GPtrArray]](reservedsize: U32)
use @g_ptr_array_new_full[NullablePointer[_GPtrArray]](reservedsize: U32, elementfreefunc: Pointer[None] tag)
use @g_ptr_array_free[NullablePointer[Pointer[None]]](array: NullablePointer[_GPtrArray] tag, freeseg: I32)
use @g_ptr_array_ref[NullablePointer[_GPtrArray]](array: NullablePointer[_GPtrArray] tag)
use @g_ptr_array_unref[None](array: NullablePointer[_GPtrArray] tag)
use @g_ptr_array_set_free_func[None](array: NullablePointer[_GPtrArray] tag, elementfreefunc: Pointer[None] tag)
use @g_ptr_array_set_size[None](array: NullablePointer[_GPtrArray] tag, length: I32)
use @g_ptr_array_remove_index[Pointer[None]](array: NullablePointer[_GPtrArray] tag, index: U32)
use @g_ptr_array_remove_index_fast[Pointer[None]](array: NullablePointer[_GPtrArray] tag, index: U32)
use @g_ptr_array_steal_index[Pointer[None]](array: NullablePointer[_GPtrArray] tag, index: U32)
use @g_ptr_array_steal_index_fast[Pointer[None]](array: NullablePointer[_GPtrArray] tag, index: U32)
use @g_ptr_array_remove[I32](array: NullablePointer[_GPtrArray] tag, data: Pointer[None] tag)
use @g_ptr_array_remove_fast[I32](array: NullablePointer[_GPtrArray] tag, data: Pointer[None] tag)
use @g_ptr_array_remove_range[NullablePointer[_GPtrArray]](array: NullablePointer[_GPtrArray] tag, index: U32, length: U32)
use @g_ptr_array_add[None](array: NullablePointer[_GPtrArray] tag, data: Pointer[None] tag)
use @g_ptr_array_extend[None](arraytoextend: NullablePointer[_GPtrArray] tag, array: NullablePointer[_GPtrArray] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_ptr_array_extend_and_steal[None](arraytoextend: NullablePointer[_GPtrArray] tag, array: NullablePointer[_GPtrArray] tag)
use @g_ptr_array_insert[None](array: NullablePointer[_GPtrArray] tag, index: I32, data: Pointer[None] tag)
use @g_ptr_array_sort[None](array: NullablePointer[_GPtrArray] tag, comparefunc: Pointer[None] tag)
use @g_ptr_array_sort_with_data[None](array: NullablePointer[_GPtrArray] tag, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_ptr_array_foreach[None](array: NullablePointer[_GPtrArray] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_ptr_array_find[I32](haystack: NullablePointer[_GPtrArray] tag, needle: Pointer[None] tag, index: Pointer[U32] tag)
use @g_ptr_array_find_with_equal_func[I32](haystack: NullablePointer[_GPtrArray] tag, needle: Pointer[None] tag, equalfunc: Pointer[None] tag, index: Pointer[U32] tag)
use @g_byte_array_new[NullablePointer[_GByteArray]]()
use @g_byte_array_new_take[NullablePointer[_GByteArray]](data: Pointer[U8] tag, len: U64)
use @g_byte_array_steal[Pointer[U8]](array: NullablePointer[_GByteArray] tag, len: Pointer[U64] tag)
use @g_byte_array_sized_new[NullablePointer[_GByteArray]](reservedsize: U32)
use @g_byte_array_free[Pointer[U8]](array: NullablePointer[_GByteArray] tag, freesegment: I32)
use @g_byte_array_free_to_bytes[NullablePointer[_GBytes]](array: NullablePointer[_GByteArray] tag)
use @g_byte_array_ref[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag)
use @g_byte_array_unref[None](array: NullablePointer[_GByteArray] tag)
use @g_byte_array_append[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag, data: Pointer[U8] tag, len: U32)
use @g_byte_array_prepend[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag, data: Pointer[U8] tag, len: U32)
use @g_byte_array_set_size[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag, length: U32)
use @g_byte_array_remove_index[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag, index: U32)
use @g_byte_array_remove_index_fast[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag, index: U32)
use @g_byte_array_remove_range[NullablePointer[_GByteArray]](array: NullablePointer[_GByteArray] tag, index: U32, length: U32)
use @g_byte_array_sort[None](array: NullablePointer[_GByteArray] tag, comparefunc: Pointer[None] tag)
use @g_byte_array_sort_with_data[None](array: NullablePointer[_GByteArray] tag, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_atomic_int_get[I32](atomic: Pointer[I32] tag)
use @g_atomic_int_set[None](atomic: Pointer[I32] tag, newval: I32)
use @g_atomic_int_inc[None](atomic: Pointer[I32] tag)
use @g_atomic_int_dec_and_test[I32](atomic: Pointer[I32] tag)
use @g_atomic_int_compare_and_exchange[I32](atomic: Pointer[I32] tag, oldval: I32, newval: I32)
use @g_atomic_int_add[I32](atomic: Pointer[I32] tag, gval: I32)
use @g_atomic_int_and[U32](atomic: Pointer[U32] tag, gval: U32)
use @g_atomic_int_or[U32](atomic: Pointer[U32] tag, gval: U32)
use @g_atomic_int_xor[U32](atomic: Pointer[U32] tag, gval: U32)
use @g_atomic_pointer_get[Pointer[None]](atomic: Pointer[None] tag)
use @g_atomic_pointer_set[None](atomic: Pointer[None] tag, newval: Pointer[None] tag)
use @g_atomic_pointer_compare_and_exchange[I32](atomic: Pointer[None] tag, oldval: Pointer[None] tag, newval: Pointer[None] tag)
use @g_atomic_pointer_add[I64](atomic: Pointer[None] tag, gval: I64)
use @g_atomic_pointer_and[U64](atomic: Pointer[None] tag, gval: U64)
use @g_atomic_pointer_or[U64](atomic: Pointer[None] tag, gval: U64)
use @g_atomic_pointer_xor[U64](atomic: Pointer[None] tag, gval: U64)
use @g_atomic_int_exchange_and_add[I32](atomic: Pointer[I32] tag, gval: I32)
use @g_quark_try_string[U32](string: Pointer[U8] tag)
use @g_quark_from_static_string[U32](string: Pointer[U8] tag)
use @g_quark_from_string[U32](string: Pointer[U8] tag)
use @g_quark_to_string[Pointer[U8]](quark: U32)
use @g_intern_string[Pointer[U8]](string: Pointer[U8] tag)
use @g_intern_static_string[Pointer[U8]](string: Pointer[U8] tag)
use @g_error_domain_register_static[U32](errortypename: Pointer[U8] tag, errortypeprivatesize: U64, errortypeinit: Pointer[None] tag, errortypecopy: Pointer[None] tag, errortypeclear: Pointer[None] tag)
use @g_error_domain_register[U32](errortypename: Pointer[U8] tag, errortypeprivatesize: U64, errortypeinit: Pointer[None] tag, errortypecopy: Pointer[None] tag, errortypeclear: Pointer[None] tag)
use @g_error_new_literal[NullablePointer[_GError]](domain: U32, code: I32, message: Pointer[U8] tag)
use @g_error_free[None](gerror: NullablePointer[_GError] tag)
use @g_error_copy[NullablePointer[_GError]](gerror: NullablePointer[_GError] tag)
use @g_error_matches[I32](gerror: NullablePointer[_GError] tag, domain: U32, code: I32)
use @g_set_error_literal[None](err: Pointer[NullablePointer[_GError]] tag, domain: U32, code: I32, message: Pointer[U8] tag)
use @g_propagate_error[None](dest: Pointer[NullablePointer[_GError]] tag, src: NullablePointer[_GError] tag)
use @g_clear_error[None](err: Pointer[NullablePointer[_GError]] tag)
use @g_prefix_error_literal[None](err: Pointer[NullablePointer[_GError]] tag, prefix: Pointer[U8] tag)
use @g_get_user_name[Pointer[U8]]()
use @g_get_real_name[Pointer[U8]]()
use @g_get_home_dir[Pointer[U8]]()
use @g_get_tmp_dir[Pointer[U8]]()
use @g_get_host_name[Pointer[U8]]()
use @g_get_prgname[Pointer[U8]]()
use @g_set_prgname[None](prgname: Pointer[U8] tag)
use @g_get_application_name[Pointer[U8]]()
use @g_set_application_name[None](applicationname: Pointer[U8] tag)
use @g_get_os_info[Pointer[U8]](keyname: Pointer[U8] tag)
use @g_reload_user_special_dirs_cache[None]()
use @g_get_user_data_dir[Pointer[U8]]()
use @g_get_user_config_dir[Pointer[U8]]()
use @g_get_user_cache_dir[Pointer[U8]]()
use @g_get_system_data_dirs[Pointer[Pointer[U8]]]()
use @g_get_system_config_dirs[Pointer[Pointer[U8]]]()
use @g_get_user_runtime_dir[Pointer[U8]]()
use @g_get_user_special_dir[Pointer[U8]](directory: I32)
use @g_parse_debug_string[U32](string: Pointer[U8] tag, keys: NullablePointer[_GDebugKey] tag, nkeys: U32)
use @g_nullify_pointer[None](nullifylocation: NullablePointer[Pointer[None]] tag)
use @g_format_size_full[Pointer[U8]](size: U64, flags: I32)
use @g_format_size[Pointer[U8]](size: U64)
use @g_format_size_for_display[Pointer[U8]](size: I64)
use @g_atexit[None](func: Pointer[None] tag)
use @g_find_program_in_path[Pointer[U8]](program: Pointer[U8] tag)
use @g_bit_nth_lsf[I32](mask: U64, nthbit: I32)
use @g_bit_nth_msf[I32](mask: U64, nthbit: I32)
use @g_bit_storage[U32](number: U64)
use @g_bit_nth_lsf_impl[I32](mask: U64, nthbit: I32)
use @g_bit_nth_msf_impl[I32](mask: U64, nthbit: I32)
use @g_bit_storage_impl[U32](number: U64)
use @g_thread_error_quark[U32]()
use @g_thread_ref[NullablePointer[_GThread]](thread: NullablePointer[_GThread] tag)
use @g_thread_unref[None](thread: NullablePointer[_GThread] tag)
use @g_thread_new[NullablePointer[_GThread]](name: Pointer[U8] tag, func: Pointer[None] tag, data: Pointer[None] tag)
use @g_thread_try_new[NullablePointer[_GThread]](name: Pointer[U8] tag, func: Pointer[None] tag, data: Pointer[None] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_thread_self[NullablePointer[_GThread]]()
use @g_thread_exit[None](retval: Pointer[None] tag)
use @g_thread_join[Pointer[None]](thread: NullablePointer[_GThread] tag)
use @g_thread_yield[None]()
use @g_mutex_init[None](mutex: Pointer[None] tag)
use @g_mutex_clear[None](mutex: Pointer[None] tag)
use @g_mutex_lock[None](mutex: Pointer[None] tag)
use @g_mutex_trylock[I32](mutex: Pointer[None] tag)
use @g_mutex_unlock[None](mutex: Pointer[None] tag)
use @g_rw_lock_init[None](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_clear[None](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_writer_lock[None](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_writer_trylock[I32](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_writer_unlock[None](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_reader_lock[None](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_reader_trylock[I32](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_reader_unlock[None](rwlock: NullablePointer[_GRWLock] tag)
use @g_rec_mutex_init[None](recmutex: NullablePointer[_GRecMutex] tag)
use @g_rec_mutex_clear[None](recmutex: NullablePointer[_GRecMutex] tag)
use @g_rec_mutex_lock[None](recmutex: NullablePointer[_GRecMutex] tag)
use @g_rec_mutex_trylock[I32](recmutex: NullablePointer[_GRecMutex] tag)
use @g_rec_mutex_unlock[None](recmutex: NullablePointer[_GRecMutex] tag)
use @g_cond_init[None](cond: NullablePointer[_GCond] tag)
use @g_cond_clear[None](cond: NullablePointer[_GCond] tag)
use @g_cond_wait[None](cond: NullablePointer[_GCond] tag, mutex: Pointer[None] tag)
use @g_cond_signal[None](cond: NullablePointer[_GCond] tag)
use @g_cond_broadcast[None](cond: NullablePointer[_GCond] tag)
use @g_cond_wait_until[I32](cond: NullablePointer[_GCond] tag, mutex: Pointer[None] tag, endtime: I64)
use @g_private_get[Pointer[None]](key: NullablePointer[_GPrivate] tag)
use @g_private_set[None](key: NullablePointer[_GPrivate] tag, value: Pointer[None] tag)
use @g_private_replace[None](key: NullablePointer[_GPrivate] tag, value: Pointer[None] tag)
use @g_once_impl[Pointer[None]](once: NullablePointer[_GOnce] tag, func: Pointer[None] tag, arg: Pointer[None] tag)
use @g_once_init_enter[I32](location: Pointer[None] tag)
use @g_once_init_leave[None](location: Pointer[None] tag, result: U64)
use @g_get_num_processors[U32]()
use @g_mutex_locker_new[Pointer[None]](mutex: Pointer[None] tag)
use @g_mutex_locker_free[None](locker: Pointer[None] tag)
use @g_rec_mutex_locker_new[Pointer[None]](recmutex: NullablePointer[_GRecMutex] tag)
use @g_rec_mutex_locker_free[None](locker: Pointer[None] tag)
use @g_rw_lock_writer_locker_new[Pointer[None]](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_writer_locker_free[None](locker: Pointer[None] tag)
use @g_rw_lock_reader_locker_new[Pointer[None]](rwlock: NullablePointer[_GRWLock] tag)
use @g_rw_lock_reader_locker_free[None](locker: Pointer[None] tag)
use @g_async_queue_new[NullablePointer[_GAsyncQueue]]()
use @g_async_queue_new_full[NullablePointer[_GAsyncQueue]](itemfreefunc: Pointer[None] tag)
use @g_async_queue_lock[None](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_unlock[None](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_ref[NullablePointer[_GAsyncQueue]](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_unref[None](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_ref_unlocked[None](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_unref_and_unlock[None](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_push[None](queue: NullablePointer[_GAsyncQueue] tag, data: Pointer[None] tag)
use @g_async_queue_push_unlocked[None](queue: NullablePointer[_GAsyncQueue] tag, data: Pointer[None] tag)
use @g_async_queue_push_sorted[None](queue: NullablePointer[_GAsyncQueue] tag, data: Pointer[None] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_async_queue_push_sorted_unlocked[None](queue: NullablePointer[_GAsyncQueue] tag, data: Pointer[None] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_async_queue_pop[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_pop_unlocked[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_try_pop[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_try_pop_unlocked[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_timeout_pop[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag, timeout: U64)
use @g_async_queue_timeout_pop_unlocked[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag, timeout: U64)
use @g_async_queue_length[I32](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_length_unlocked[I32](queue: NullablePointer[_GAsyncQueue] tag)
use @g_async_queue_sort[None](queue: NullablePointer[_GAsyncQueue] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_async_queue_sort_unlocked[None](queue: NullablePointer[_GAsyncQueue] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_async_queue_remove[I32](queue: NullablePointer[_GAsyncQueue] tag, item: Pointer[None] tag)
use @g_async_queue_remove_unlocked[I32](queue: NullablePointer[_GAsyncQueue] tag, item: Pointer[None] tag)
use @g_async_queue_push_front[None](queue: NullablePointer[_GAsyncQueue] tag, item: Pointer[None] tag)
use @g_async_queue_push_front_unlocked[None](queue: NullablePointer[_GAsyncQueue] tag, item: Pointer[None] tag)
use @g_async_queue_timed_pop[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag, endtime: NullablePointer[_GTimeVal] tag)
use @g_async_queue_timed_pop_unlocked[Pointer[None]](queue: NullablePointer[_GAsyncQueue] tag, endtime: NullablePointer[_GTimeVal] tag)
use @g_on_error_query[None](prgname: Pointer[U8] tag)
use @g_on_error_stack_trace[None](prgname: Pointer[U8] tag)
use @g_base64_encode_step[U64](gin: Pointer[U8] tag, len: U64, breaklines: I32, out: Pointer[U8] tag, state: Pointer[I32] tag, save: Pointer[I32] tag)
use @g_base64_encode_close[U64](breaklines: I32, out: Pointer[U8] tag, state: Pointer[I32] tag, save: Pointer[I32] tag)
use @g_base64_encode[Pointer[U8]](data: Pointer[U8] tag, len: U64)
use @g_base64_decode_step[U64](gin: Pointer[U8] tag, len: U64, out: Pointer[U8] tag, state: Pointer[I32] tag, save: Pointer[U32] tag)
use @g_base64_decode[Pointer[U8]](text: Pointer[U8] tag, outlen: Pointer[U64] tag)
use @g_base64_decode_inplace[Pointer[U8]](text: Pointer[U8] tag, outlen: Pointer[U64] tag)
use @g_bit_lock[None](address: Pointer[I32] tag, lockbit: I32)
use @g_bit_trylock[I32](address: Pointer[I32] tag, lockbit: I32)
use @g_bit_unlock[None](address: Pointer[I32] tag, lockbit: I32)
use @g_pointer_bit_lock[None](address: Pointer[None] tag, lockbit: I32)
use @g_pointer_bit_trylock[I32](address: Pointer[None] tag, lockbit: I32)
use @g_pointer_bit_unlock[None](address: Pointer[None] tag, lockbit: I32)
use @g_time_zone_new[NullablePointer[_GTimeZone]](identifier: Pointer[U8] tag)
use @g_time_zone_new_identifier[NullablePointer[_GTimeZone]](identifier: Pointer[U8] tag)
use @g_time_zone_new_utc[NullablePointer[_GTimeZone]]()
use @g_time_zone_new_local[NullablePointer[_GTimeZone]]()
use @g_time_zone_new_offset[NullablePointer[_GTimeZone]](seconds: I32)
use @g_time_zone_ref[NullablePointer[_GTimeZone]](tz: NullablePointer[_GTimeZone] tag)
use @g_time_zone_unref[None](tz: NullablePointer[_GTimeZone] tag)
use @g_time_zone_find_interval[I32](tz: NullablePointer[_GTimeZone] tag, gtype: I32, time: I64)
use @g_time_zone_adjust_time[I32](tz: NullablePointer[_GTimeZone] tag, gtype: I32, time: Pointer[I64] tag)
use @g_time_zone_get_abbreviation[Pointer[U8]](tz: NullablePointer[_GTimeZone] tag, interval: I32)
use @g_time_zone_get_offset[I32](tz: NullablePointer[_GTimeZone] tag, interval: I32)
use @g_time_zone_is_dst[I32](tz: NullablePointer[_GTimeZone] tag, interval: I32)
use @g_time_zone_get_identifier[Pointer[U8]](tz: NullablePointer[_GTimeZone] tag)
use @g_date_time_unref[None](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_ref[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_new_now[NullablePointer[_GDateTime]](tz: NullablePointer[_GTimeZone] tag)
use @g_date_time_new_now_local[NullablePointer[_GDateTime]]()
use @g_date_time_new_now_utc[NullablePointer[_GDateTime]]()
use @g_date_time_new_from_unix_local[NullablePointer[_GDateTime]](t: I64)
use @g_date_time_new_from_unix_utc[NullablePointer[_GDateTime]](t: I64)
use @g_date_time_new_from_timeval_local[NullablePointer[_GDateTime]](tv: NullablePointer[_GTimeVal] tag)
use @g_date_time_new_from_timeval_utc[NullablePointer[_GDateTime]](tv: NullablePointer[_GTimeVal] tag)
use @g_date_time_new_from_iso8601[NullablePointer[_GDateTime]](text: Pointer[U8] tag, defaulttz: NullablePointer[_GTimeZone] tag)
use @g_date_time_new[NullablePointer[_GDateTime]](tz: NullablePointer[_GTimeZone] tag, year: I32, month: I32, day: I32, hour: I32, minute: I32, seconds: F64)
use @g_date_time_new_local[NullablePointer[_GDateTime]](year: I32, month: I32, day: I32, hour: I32, minute: I32, seconds: F64)
use @g_date_time_new_utc[NullablePointer[_GDateTime]](year: I32, month: I32, day: I32, hour: I32, minute: I32, seconds: F64)
use @g_date_time_add[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, timespan: I64)
use @g_date_time_add_years[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, years: I32)
use @g_date_time_add_months[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, months: I32)
use @g_date_time_add_weeks[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, weeks: I32)
use @g_date_time_add_days[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, days: I32)
use @g_date_time_add_hours[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, hours: I32)
use @g_date_time_add_minutes[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, minutes: I32)
use @g_date_time_add_seconds[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, seconds: F64)
use @g_date_time_add_full[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, years: I32, months: I32, days: I32, hours: I32, minutes: I32, seconds: F64)
use @g_date_time_compare[I32](dt1: Pointer[None] tag, dt2: Pointer[None] tag)
use @g_date_time_difference[I64](gend: NullablePointer[_GDateTime] tag, begin: NullablePointer[_GDateTime] tag)
use @g_date_time_hash[U32](datetime: Pointer[None] tag)
use @g_date_time_equal[I32](dt1: Pointer[None] tag, dt2: Pointer[None] tag)
use @g_date_time_get_ymd[None](datetime: NullablePointer[_GDateTime] tag, year: Pointer[I32] tag, month: Pointer[I32] tag, day: Pointer[I32] tag)
use @g_date_time_get_year[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_month[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_day_of_month[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_week_numbering_year[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_week_of_year[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_day_of_week[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_day_of_year[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_hour[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_minute[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_second[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_microsecond[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_seconds[F64](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_to_unix[I64](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_to_timeval[I32](datetime: NullablePointer[_GDateTime] tag, tv: NullablePointer[_GTimeVal] tag)
use @g_date_time_get_utc_offset[I64](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_timezone[NullablePointer[_GTimeZone]](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_get_timezone_abbreviation[Pointer[U8]](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_is_daylight_savings[I32](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_to_timezone[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag, tz: NullablePointer[_GTimeZone] tag)
use @g_date_time_to_local[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_to_utc[NullablePointer[_GDateTime]](datetime: NullablePointer[_GDateTime] tag)
use @g_date_time_format[Pointer[U8]](datetime: NullablePointer[_GDateTime] tag, format: Pointer[U8] tag)
use @g_date_time_format_iso8601[Pointer[U8]](datetime: NullablePointer[_GDateTime] tag)
use @g_bookmark_file_error_quark[U32]()
use @g_bookmark_file_new[NullablePointer[_GBookmarkFile]]()
use @g_bookmark_file_free[None](bookmark: NullablePointer[_GBookmarkFile] tag)
use @g_bookmark_file_load_from_file[I32](bookmark: NullablePointer[_GBookmarkFile] tag, filename: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_load_from_data[I32](bookmark: NullablePointer[_GBookmarkFile] tag, data: Pointer[U8] tag, length: U64, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_load_from_data_dirs[I32](bookmark: NullablePointer[_GBookmarkFile] tag, file: Pointer[U8] tag, fullpath: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_to_data[Pointer[U8]](bookmark: NullablePointer[_GBookmarkFile] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_to_file[I32](bookmark: NullablePointer[_GBookmarkFile] tag, filename: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_title[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, title: Pointer[U8] tag)
use @g_bookmark_file_get_title[Pointer[U8]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_description[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, description: Pointer[U8] tag)
use @g_bookmark_file_get_description[Pointer[U8]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_mime_type[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, mimetype: Pointer[U8] tag)
use @g_bookmark_file_get_mime_type[Pointer[U8]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_groups[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, groups: Pointer[Pointer[U8]] tag, length: U64)
use @g_bookmark_file_add_group[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, group: Pointer[U8] tag)
use @g_bookmark_file_has_group[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, group: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_groups[Pointer[Pointer[U8]]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_add_application[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, exec: Pointer[U8] tag)
use @g_bookmark_file_has_application[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_applications[Pointer[Pointer[U8]]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_app_info[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, exec: Pointer[U8] tag, count: I32, stamp: I64, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_application_info[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, exec: Pointer[U8] tag, count: I32, stamp: NullablePointer[_GDateTime] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_app_info[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, exec: Pointer[Pointer[U8]] tag, count: Pointer[U32] tag, stamp: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_application_info[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, exec: Pointer[Pointer[U8]] tag, count: Pointer[U32] tag, stamp: Pointer[NullablePointer[_GDateTime]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_is_private[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, isprivate: I32)
use @g_bookmark_file_get_is_private[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_icon[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, href: Pointer[U8] tag, mimetype: Pointer[U8] tag)
use @g_bookmark_file_get_icon[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, href: Pointer[Pointer[U8]] tag, mimetype: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_added[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, added: I64)
use @g_bookmark_file_set_added_date_time[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, added: NullablePointer[_GDateTime] tag)
use @g_bookmark_file_get_added[I64](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_added_date_time[NullablePointer[_GDateTime]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_modified[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, modified: I64)
use @g_bookmark_file_set_modified_date_time[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, modified: NullablePointer[_GDateTime] tag)
use @g_bookmark_file_get_modified[I64](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_modified_date_time[NullablePointer[_GDateTime]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_set_visited[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, visited: I64)
use @g_bookmark_file_set_visited_date_time[None](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, visited: NullablePointer[_GDateTime] tag)
use @g_bookmark_file_get_visited[I64](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_get_visited_date_time[NullablePointer[_GDateTime]](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_has_item[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag)
use @g_bookmark_file_get_size[I32](bookmark: NullablePointer[_GBookmarkFile] tag)
use @g_bookmark_file_get_uris[Pointer[Pointer[U8]]](bookmark: NullablePointer[_GBookmarkFile] tag, length: Pointer[U64] tag)
use @g_bookmark_file_remove_group[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, group: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_remove_application[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, name: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_remove_item[I32](bookmark: NullablePointer[_GBookmarkFile] tag, uri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bookmark_file_move_item[I32](bookmark: NullablePointer[_GBookmarkFile] tag, olduri: Pointer[U8] tag, newuri: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_bytes_new[NullablePointer[_GBytes]](data: Pointer[None] tag, size: U64)
use @g_bytes_new_take[NullablePointer[_GBytes]](data: Pointer[None] tag, size: U64)
use @g_bytes_new_static[NullablePointer[_GBytes]](data: Pointer[None] tag, size: U64)
use @g_bytes_new_with_free_func[NullablePointer[_GBytes]](data: Pointer[None] tag, size: U64, freefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_bytes_new_from_bytes[NullablePointer[_GBytes]](bytes: NullablePointer[_GBytes] tag, offset: U64, length: U64)
use @g_bytes_get_data[Pointer[None]](bytes: NullablePointer[_GBytes] tag, size: Pointer[U64] tag)
use @g_bytes_get_size[U64](bytes: NullablePointer[_GBytes] tag)
use @g_bytes_ref[NullablePointer[_GBytes]](bytes: NullablePointer[_GBytes] tag)
use @g_bytes_unref[None](bytes: NullablePointer[_GBytes] tag)
use @g_bytes_unref_to_data[Pointer[None]](bytes: NullablePointer[_GBytes] tag, size: Pointer[U64] tag)
use @g_bytes_unref_to_array[NullablePointer[_GByteArray]](bytes: NullablePointer[_GBytes] tag)
use @g_bytes_hash[U32](bytes: Pointer[None] tag)
use @g_bytes_equal[I32](bytes1: Pointer[None] tag, bytes2: Pointer[None] tag)
use @g_bytes_compare[I32](bytes1: Pointer[None] tag, bytes2: Pointer[None] tag)
use @g_bytes_get_region[Pointer[None]](bytes: NullablePointer[_GBytes] tag, elementsize: U64, offset: U64, nelements: U64)
use @g_get_charset[I32](charset: Pointer[Pointer[U8]] tag)
use @g_get_codeset[Pointer[U8]]()
use @g_get_console_charset[I32](charset: Pointer[Pointer[U8]] tag)
use @g_get_language_names[Pointer[Pointer[U8]]]()
use @g_get_language_names_with_category[Pointer[Pointer[U8]]](categoryname: Pointer[U8] tag)
use @g_get_locale_variants[Pointer[Pointer[U8]]](locale: Pointer[U8] tag)
use @g_checksum_type_get_length[I64](checksumtype: I32)
use @g_checksum_new[NullablePointer[_GChecksum]](checksumtype: I32)
use @g_checksum_reset[None](checksum: NullablePointer[_GChecksum] tag)
use @g_checksum_copy[NullablePointer[_GChecksum]](checksum: NullablePointer[_GChecksum] tag)
use @g_checksum_free[None](checksum: NullablePointer[_GChecksum] tag)
use @g_checksum_update[None](checksum: NullablePointer[_GChecksum] tag, data: Pointer[U8] tag, length: I64)
use @g_checksum_get_string[Pointer[U8]](checksum: NullablePointer[_GChecksum] tag)
use @g_checksum_get_digest[None](checksum: NullablePointer[_GChecksum] tag, buffer: Pointer[U8] tag, digestlen: Pointer[U64] tag)
use @g_compute_checksum_for_data[Pointer[U8]](checksumtype: I32, data: Pointer[U8] tag, length: U64)
use @g_compute_checksum_for_string[Pointer[U8]](checksumtype: I32, str: Pointer[U8] tag, length: I64)
use @g_compute_checksum_for_bytes[Pointer[U8]](checksumtype: I32, data: NullablePointer[_GBytes] tag)
use @g_convert_error_quark[U32]()
use @g_iconv_open[NullablePointer[_GIConv]](tocodeset: Pointer[U8] tag, fromcodeset: Pointer[U8] tag)
use @g_iconv[U64](converter: NullablePointer[_GIConv] tag, inbuf: Pointer[Pointer[U8]] tag, inbytesleft: Pointer[U64] tag, outbuf: Pointer[Pointer[U8]] tag, outbytesleft: Pointer[U64] tag)
use @g_iconv_close[I32](converter: NullablePointer[_GIConv] tag)
use @g_convert[Pointer[U8]](str: Pointer[U8] tag, len: I64, tocodeset: Pointer[U8] tag, fromcodeset: Pointer[U8] tag, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_convert_with_iconv[Pointer[U8]](str: Pointer[U8] tag, len: I64, converter: NullablePointer[_GIConv] tag, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_convert_with_fallback[Pointer[U8]](str: Pointer[U8] tag, len: I64, tocodeset: Pointer[U8] tag, fromcodeset: Pointer[U8] tag, fallback: Pointer[U8] tag, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_locale_to_utf8[Pointer[U8]](opsysstring: Pointer[U8] tag, len: I64, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_locale_from_utf8[Pointer[U8]](utf8string: Pointer[U8] tag, len: I64, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_filename_to_utf8[Pointer[U8]](opsysstring: Pointer[U8] tag, len: I64, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_filename_from_utf8[Pointer[U8]](utf8string: Pointer[U8] tag, len: I64, bytesread: Pointer[U64] tag, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_filename_from_uri[Pointer[U8]](uri: Pointer[U8] tag, hostname: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_filename_to_uri[Pointer[U8]](filename: Pointer[U8] tag, hostname: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_filename_display_name[Pointer[U8]](filename: Pointer[U8] tag)
use @g_get_filename_charsets[I32](filenamecharsets: Pointer[Pointer[Pointer[U8]]])
use @g_filename_display_basename[Pointer[U8]](filename: Pointer[U8] tag)
use @g_uri_list_extract_uris[Pointer[Pointer[U8]]](urilist: Pointer[U8] tag)
use @g_datalist_init[None](datalist: Pointer[NullablePointer[_GData]] tag)
use @g_datalist_clear[None](datalist: Pointer[NullablePointer[_GData]] tag)
use @g_datalist_id_get_data[Pointer[None]](datalist: Pointer[NullablePointer[_GData]] tag, keyid: U32)
use @g_datalist_id_set_data_full[None](datalist: Pointer[NullablePointer[_GData]] tag, keyid: U32, data: Pointer[None] tag, destroyfunc: Pointer[None] tag)
use @g_datalist_id_dup_data[Pointer[None]](datalist: Pointer[NullablePointer[_GData]] tag, keyid: U32, dupfunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_datalist_id_replace_data[I32](datalist: Pointer[NullablePointer[_GData]] tag, keyid: U32, oldval: Pointer[None] tag, newval: Pointer[None] tag, destroy: Pointer[None] tag, olddestroy: NullablePointer[Pointer[None]] tag)
use @g_datalist_id_remove_no_notify[Pointer[None]](datalist: Pointer[NullablePointer[_GData]] tag, keyid: U32)
use @g_datalist_foreach[None](datalist: Pointer[NullablePointer[_GData]] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_datalist_set_flags[None](datalist: Pointer[NullablePointer[_GData]] tag, flags: U32)
use @g_datalist_unset_flags[None](datalist: Pointer[NullablePointer[_GData]] tag, flags: U32)
use @g_datalist_get_flags[U32](datalist: Pointer[NullablePointer[_GData]] tag)
use @g_dataset_destroy[None](datasetlocation: Pointer[None] tag)
use @g_dataset_id_get_data[Pointer[None]](datasetlocation: Pointer[None] tag, keyid: U32)
use @g_datalist_get_data[Pointer[None]](datalist: Pointer[NullablePointer[_GData]] tag, key: Pointer[U8] tag)
use @g_dataset_id_set_data_full[None](datasetlocation: Pointer[None] tag, keyid: U32, data: Pointer[None] tag, destroyfunc: Pointer[None] tag)
use @g_dataset_id_remove_no_notify[Pointer[None]](datasetlocation: Pointer[None] tag, keyid: U32)
use @g_dataset_foreach[None](datasetlocation: Pointer[None] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_date_new[NullablePointer[_GDate]]()
use @g_date_new_dmy[NullablePointer[_GDate]](day: U8, month: I32, year: U16)
use @g_date_new_julian[NullablePointer[_GDate]](julianday: U32)
use @g_date_free[None](date: NullablePointer[_GDate] tag)
use @g_date_copy[NullablePointer[_GDate]](date: NullablePointer[_GDate] tag)
use @g_date_valid[I32](date: NullablePointer[_GDate] tag)
use @g_date_valid_day[I32](day: U8)
use @g_date_valid_month[I32](month: I32)
use @g_date_valid_year[I32](year: U16)
use @g_date_valid_weekday[I32](weekday: I32)
use @g_date_valid_julian[I32](juliandate: U32)
use @g_date_valid_dmy[I32](day: U8, month: I32, year: U16)
use @g_date_get_weekday[I32](date: NullablePointer[_GDate] tag)
use @g_date_get_month[I32](date: NullablePointer[_GDate] tag)
use @g_date_get_year[U16](date: NullablePointer[_GDate] tag)
use @g_date_get_day[U8](date: NullablePointer[_GDate] tag)
use @g_date_get_julian[U32](date: NullablePointer[_GDate] tag)
use @g_date_get_day_of_year[U32](date: NullablePointer[_GDate] tag)
use @g_date_get_monday_week_of_year[U32](date: NullablePointer[_GDate] tag)
use @g_date_get_sunday_week_of_year[U32](date: NullablePointer[_GDate] tag)
use @g_date_get_iso8601_week_of_year[U32](date: NullablePointer[_GDate] tag)
use @g_date_clear[None](date: NullablePointer[_GDate] tag, ndates: U32)
use @g_date_set_parse[None](date: NullablePointer[_GDate] tag, str: Pointer[U8] tag)
use @g_date_set_time_t[None](date: NullablePointer[_GDate] tag, timet: I64)
use @g_date_set_time_val[None](date: NullablePointer[_GDate] tag, timeval: NullablePointer[_GTimeVal] tag)
use @g_date_set_time[None](date: NullablePointer[_GDate] tag, time: I32)
use @g_date_set_month[None](date: NullablePointer[_GDate] tag, month: I32)
use @g_date_set_day[None](date: NullablePointer[_GDate] tag, day: U8)
use @g_date_set_year[None](date: NullablePointer[_GDate] tag, year: U16)
use @g_date_set_dmy[None](date: NullablePointer[_GDate] tag, day: U8, month: I32, y: U16)
use @g_date_set_julian[None](date: NullablePointer[_GDate] tag, juliandate: U32)
use @g_date_is_first_of_month[I32](date: NullablePointer[_GDate] tag)
use @g_date_is_last_of_month[I32](date: NullablePointer[_GDate] tag)
use @g_date_add_days[None](date: NullablePointer[_GDate] tag, ndays: U32)
use @g_date_subtract_days[None](date: NullablePointer[_GDate] tag, ndays: U32)
use @g_date_add_months[None](date: NullablePointer[_GDate] tag, nmonths: U32)
use @g_date_subtract_months[None](date: NullablePointer[_GDate] tag, nmonths: U32)
use @g_date_add_years[None](date: NullablePointer[_GDate] tag, nyears: U32)
use @g_date_subtract_years[None](date: NullablePointer[_GDate] tag, nyears: U32)
use @g_date_is_leap_year[I32](year: U16)
use @g_date_get_days_in_month[U8](month: I32, year: U16)
use @g_date_get_monday_weeks_in_year[U8](year: U16)
use @g_date_get_sunday_weeks_in_year[U8](year: U16)
use @g_date_days_between[I32](date1: NullablePointer[_GDate] tag, date2: NullablePointer[_GDate] tag)
use @g_date_compare[I32](lhs: NullablePointer[_GDate] tag, rhs: NullablePointer[_GDate] tag)
use @g_date_to_struct_tm[None](date: NullablePointer[_GDate] tag, tm: NullablePointer[_Tm] tag)
use @g_date_clamp[None](date: NullablePointer[_GDate] tag, mindate: NullablePointer[_GDate] tag, maxdate: NullablePointer[_GDate] tag)
use @g_date_order[None](date1: NullablePointer[_GDate] tag, date2: NullablePointer[_GDate] tag)
use @g_date_strftime[U64](s: Pointer[U8] tag, slen: U64, format: Pointer[U8] tag, date: NullablePointer[_GDate] tag)
use @g_dir_open[NullablePointer[_GDir]](path: Pointer[U8] tag, flags: U32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_dir_read_name[Pointer[U8]](dir: NullablePointer[_GDir] tag)
use @g_dir_rewind[None](dir: NullablePointer[_GDir] tag)
use @g_dir_close[None](dir: NullablePointer[_GDir] tag)
use @g_getenv[Pointer[U8]](variable: Pointer[U8] tag)
use @g_setenv[I32](variable: Pointer[U8] tag, value: Pointer[U8] tag, overwrite: I32)
use @g_unsetenv[None](variable: Pointer[U8] tag)
use @g_listenv[Pointer[Pointer[U8]]]()
use @g_get_environ[Pointer[Pointer[U8]]]()
use @g_environ_getenv[Pointer[U8]](envp: Pointer[Pointer[U8]] tag, variable: Pointer[U8] tag)
use @g_environ_setenv[Pointer[Pointer[U8]]](envp: Pointer[Pointer[U8]] tag, variable: Pointer[U8] tag, value: Pointer[U8] tag, overwrite: I32)
use @g_environ_unsetenv[Pointer[Pointer[U8]]](envp: Pointer[Pointer[U8]] tag, variable: Pointer[U8] tag)
use @g_file_error_quark[U32]()
use @g_file_error_from_errno[I32](errno: I32)
use @g_file_test[I32](filename: Pointer[U8] tag, test: I32)
use @g_file_get_contents[I32](filename: Pointer[U8] tag, contents: Pointer[Pointer[U8]] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_file_set_contents[I32](filename: Pointer[U8] tag, contents: Pointer[U8] tag, length: I64, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_file_set_contents_full[I32](filename: Pointer[U8] tag, contents: Pointer[U8] tag, length: I64, flags: I32, mode: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_file_read_link[Pointer[U8]](filename: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_mkdtemp[Pointer[U8]](tmpl: Pointer[U8] tag)
use @g_mkdtemp_full[Pointer[U8]](tmpl: Pointer[U8] tag, mode: I32)
use @g_mkstemp[I32](tmpl: Pointer[U8] tag)
use @g_mkstemp_full[I32](tmpl: Pointer[U8] tag, flags: I32, mode: I32)
use @g_file_open_tmp[I32](tmpl: Pointer[U8] tag, nameused: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_dir_make_tmp[Pointer[U8]](tmpl: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_build_pathv[Pointer[U8]](separator: Pointer[U8] tag, args: Pointer[Pointer[U8]] tag)
use @g_build_filenamev[Pointer[U8]](args: Pointer[Pointer[U8]] tag)
use @g_mkdir_with_parents[I32](pathname: Pointer[U8] tag, mode: I32)
use @g_path_is_absolute[I32](filename: Pointer[U8] tag)
use @g_path_skip_root[Pointer[U8]](filename: Pointer[U8] tag)
use @g_basename[Pointer[U8]](filename: Pointer[U8] tag)
use @g_get_current_dir[Pointer[U8]]()
use @g_path_get_basename[Pointer[U8]](filename: Pointer[U8] tag)
use @g_path_get_dirname[Pointer[U8]](filename: Pointer[U8] tag)
use @g_canonicalize_filename[Pointer[U8]](filename: Pointer[U8] tag, relativeto: Pointer[U8] tag)
use @g_strip_context[Pointer[U8]](msgid: Pointer[U8] tag, msgval: Pointer[U8] tag)
use @g_dgettext[Pointer[U8]](domain: Pointer[U8] tag, msgid: Pointer[U8] tag)
use @g_dcgettext[Pointer[U8]](domain: Pointer[U8] tag, msgid: Pointer[U8] tag, category: I32)
use @g_dngettext[Pointer[U8]](domain: Pointer[U8] tag, msgid: Pointer[U8] tag, msgidplural: Pointer[U8] tag, n: U64)
use @g_dpgettext[Pointer[U8]](domain: Pointer[U8] tag, msgctxtid: Pointer[U8] tag, msgidoffset: U64)
use @g_dpgettext2[Pointer[U8]](domain: Pointer[U8] tag, context: Pointer[U8] tag, msgid: Pointer[U8] tag)
use @g_free[None](mem: Pointer[None] tag)
use @g_clear_pointer[None](pp: NullablePointer[Pointer[None]] tag, destroy: Pointer[None] tag)
use @g_malloc[Pointer[None]](nbytes: U64)
use @g_malloc0[Pointer[None]](nbytes: U64)
use @g_realloc[Pointer[None]](mem: Pointer[None] tag, nbytes: U64)
use @g_try_malloc[Pointer[None]](nbytes: U64)
use @g_try_malloc0[Pointer[None]](nbytes: U64)
use @g_try_realloc[Pointer[None]](mem: Pointer[None] tag, nbytes: U64)
use @g_malloc_n[Pointer[None]](nblocks: U64, nblockbytes: U64)
use @g_malloc0_n[Pointer[None]](nblocks: U64, nblockbytes: U64)
use @g_realloc_n[Pointer[None]](mem: Pointer[None] tag, nblocks: U64, nblockbytes: U64)
use @g_try_malloc_n[Pointer[None]](nblocks: U64, nblockbytes: U64)
use @g_try_malloc0_n[Pointer[None]](nblocks: U64, nblockbytes: U64)
use @g_try_realloc_n[Pointer[None]](mem: Pointer[None] tag, nblocks: U64, nblockbytes: U64)
use @g_steal_pointer[Pointer[None]](pp: Pointer[None] tag)
use @g_mem_set_vtable[None](vtable: NullablePointer[_GMemVTable] tag)
use @g_mem_is_system_malloc[I32]()
use @g_mem_profile[None]()
use @g_node_new[NullablePointer[_GNode]](data: Pointer[None] tag)
use @g_node_destroy[None](root: NullablePointer[_GNode] tag)
use @g_node_unlink[None](node: NullablePointer[_GNode] tag)
use @g_node_copy_deep[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag, copyfunc: Pointer[None] tag, data: Pointer[None] tag)
use @g_node_copy[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag)
use @g_node_insert[NullablePointer[_GNode]](parent: NullablePointer[_GNode] tag, position: I32, node: NullablePointer[_GNode] tag)
use @g_node_insert_before[NullablePointer[_GNode]](parent: NullablePointer[_GNode] tag, sibling: NullablePointer[_GNode] tag, node: NullablePointer[_GNode] tag)
use @g_node_insert_after[NullablePointer[_GNode]](parent: NullablePointer[_GNode] tag, sibling: NullablePointer[_GNode] tag, node: NullablePointer[_GNode] tag)
use @g_node_prepend[NullablePointer[_GNode]](parent: NullablePointer[_GNode] tag, node: NullablePointer[_GNode] tag)
use @g_node_n_nodes[U32](root: NullablePointer[_GNode] tag, flags: I32)
use @g_node_get_root[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag)
use @g_node_is_ancestor[I32](node: NullablePointer[_GNode] tag, descendant: NullablePointer[_GNode] tag)
use @g_node_depth[U32](node: NullablePointer[_GNode] tag)
use @g_node_find[NullablePointer[_GNode]](root: NullablePointer[_GNode] tag, order: I32, flags: I32, data: Pointer[None] tag)
use @g_node_traverse[None](root: NullablePointer[_GNode] tag, order: I32, flags: I32, maxdepth: I32, func: Pointer[None] tag, data: Pointer[None] tag)
use @g_node_max_height[U32](root: NullablePointer[_GNode] tag)
use @g_node_children_foreach[None](node: NullablePointer[_GNode] tag, flags: I32, func: Pointer[None] tag, data: Pointer[None] tag)
use @g_node_reverse_children[None](node: NullablePointer[_GNode] tag)
use @g_node_n_children[U32](node: NullablePointer[_GNode] tag)
use @g_node_nth_child[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag, n: U32)
use @g_node_last_child[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag)
use @g_node_find_child[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag, flags: I32, data: Pointer[None] tag)
use @g_node_child_position[I32](node: NullablePointer[_GNode] tag, child: NullablePointer[_GNode] tag)
use @g_node_child_index[I32](node: NullablePointer[_GNode] tag, data: Pointer[None] tag)
use @g_node_first_sibling[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag)
use @g_node_last_sibling[NullablePointer[_GNode]](node: NullablePointer[_GNode] tag)
use @g_list_alloc[NullablePointer[_GList]]()
use @g_list_free[None](list: NullablePointer[_GList] tag)
use @g_list_free_1[None](list: NullablePointer[_GList] tag)
use @g_list_free_full[None](list: NullablePointer[_GList] tag, freefunc: Pointer[None] tag)
use @g_list_append[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_prepend[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_insert[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag, position: I32)
use @g_list_insert_sorted[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag, func: Pointer[None] tag)
use @g_list_insert_sorted_with_data[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_list_insert_before[NullablePointer[_GList]](list: NullablePointer[_GList] tag, sibling: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_insert_before_link[NullablePointer[_GList]](list: NullablePointer[_GList] tag, sibling: NullablePointer[_GList] tag, link: NullablePointer[_GList] tag)
use @g_list_concat[NullablePointer[_GList]](list1: NullablePointer[_GList] tag, list2: NullablePointer[_GList] tag)
use @g_list_remove[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_remove_all[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_remove_link[NullablePointer[_GList]](list: NullablePointer[_GList] tag, llink: NullablePointer[_GList] tag)
use @g_list_delete_link[NullablePointer[_GList]](list: NullablePointer[_GList] tag, link: NullablePointer[_GList] tag)
use @g_list_reverse[NullablePointer[_GList]](list: NullablePointer[_GList] tag)
use @g_list_copy[NullablePointer[_GList]](list: NullablePointer[_GList] tag)
use @g_list_copy_deep[NullablePointer[_GList]](list: NullablePointer[_GList] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_list_nth[NullablePointer[_GList]](list: NullablePointer[_GList] tag, n: U32)
use @g_list_nth_prev[NullablePointer[_GList]](list: NullablePointer[_GList] tag, n: U32)
use @g_list_find[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_find_custom[NullablePointer[_GList]](list: NullablePointer[_GList] tag, data: Pointer[None] tag, func: Pointer[None] tag)
use @g_list_position[I32](list: NullablePointer[_GList] tag, llink: NullablePointer[_GList] tag)
use @g_list_index[I32](list: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_list_last[NullablePointer[_GList]](list: NullablePointer[_GList] tag)
use @g_list_first[NullablePointer[_GList]](list: NullablePointer[_GList] tag)
use @g_list_length[U32](list: NullablePointer[_GList] tag)
use @g_list_foreach[None](list: NullablePointer[_GList] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_list_sort[NullablePointer[_GList]](list: NullablePointer[_GList] tag, comparefunc: Pointer[None] tag)
use @g_list_sort_with_data[NullablePointer[_GList]](list: NullablePointer[_GList] tag, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_list_nth_data[Pointer[None]](list: NullablePointer[_GList] tag, n: U32)
use @g_clear_list[None](listptr: Pointer[NullablePointer[_GList]] tag, destroy: Pointer[None] tag)
use @g_hash_table_new[NullablePointer[_GHashTable]](hashfunc: Pointer[None] tag, keyequalfunc: Pointer[None] tag)
use @g_hash_table_new_full[NullablePointer[_GHashTable]](hashfunc: Pointer[None] tag, keyequalfunc: Pointer[None] tag, keydestroyfunc: Pointer[None] tag, valuedestroyfunc: Pointer[None] tag)
use @g_hash_table_destroy[None](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_insert[I32](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag, value: Pointer[None] tag)
use @g_hash_table_replace[I32](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag, value: Pointer[None] tag)
use @g_hash_table_add[I32](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag)
use @g_hash_table_remove[I32](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag)
use @g_hash_table_remove_all[None](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_steal[I32](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag)
use @g_hash_table_steal_extended[I32](hashtable: NullablePointer[_GHashTable] tag, lookupkey: Pointer[None] tag, stolenkey: NullablePointer[Pointer[None]] tag, stolenvalue: NullablePointer[Pointer[None]] tag)
use @g_hash_table_steal_all[None](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_lookup[Pointer[None]](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag)
use @g_hash_table_contains[I32](hashtable: NullablePointer[_GHashTable] tag, key: Pointer[None] tag)
use @g_hash_table_lookup_extended[I32](hashtable: NullablePointer[_GHashTable] tag, lookupkey: Pointer[None] tag, origkey: NullablePointer[Pointer[None]] tag, value: NullablePointer[Pointer[None]] tag)
use @g_hash_table_foreach[None](hashtable: NullablePointer[_GHashTable] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_hash_table_find[Pointer[None]](hashtable: NullablePointer[_GHashTable] tag, predicate: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_hash_table_foreach_remove[U32](hashtable: NullablePointer[_GHashTable] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_hash_table_foreach_steal[U32](hashtable: NullablePointer[_GHashTable] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_hash_table_size[U32](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_get_keys[NullablePointer[_GList]](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_get_values[NullablePointer[_GList]](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_get_keys_as_array[NullablePointer[Pointer[None]]](hashtable: NullablePointer[_GHashTable] tag, length: Pointer[U32] tag)
use @g_hash_table_iter_init[None](iter: NullablePointer[_GHashTableIter] tag, hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_iter_next[I32](iter: NullablePointer[_GHashTableIter] tag, key: NullablePointer[Pointer[None]] tag, value: NullablePointer[Pointer[None]] tag)
use @g_hash_table_iter_get_hash_table[NullablePointer[_GHashTable]](iter: NullablePointer[_GHashTableIter] tag)
use @g_hash_table_iter_remove[None](iter: NullablePointer[_GHashTableIter] tag)
use @g_hash_table_iter_replace[None](iter: NullablePointer[_GHashTableIter] tag, value: Pointer[None] tag)
use @g_hash_table_iter_steal[None](iter: NullablePointer[_GHashTableIter] tag)
use @g_hash_table_ref[NullablePointer[_GHashTable]](hashtable: NullablePointer[_GHashTable] tag)
use @g_hash_table_unref[None](hashtable: NullablePointer[_GHashTable] tag)
use @g_str_equal[I32](v1: Pointer[None] tag, v2: Pointer[None] tag)
use @g_str_hash[U32](v: Pointer[None] tag)
use @g_int_equal[I32](v1: Pointer[None] tag, v2: Pointer[None] tag)
use @g_int_hash[U32](v: Pointer[None] tag)
use @g_int64_equal[I32](v1: Pointer[None] tag, v2: Pointer[None] tag)
use @g_int64_hash[U32](v: Pointer[None] tag)
use @g_double_equal[I32](v1: Pointer[None] tag, v2: Pointer[None] tag)
use @g_double_hash[U32](v: Pointer[None] tag)
use @g_direct_hash[U32](v: Pointer[None] tag)
use @g_direct_equal[I32](v1: Pointer[None] tag, v2: Pointer[None] tag)
use @g_hmac_new[NullablePointer[_GHmac]](digesttype: I32, key: Pointer[U8] tag, keylen: U64)
use @g_hmac_copy[NullablePointer[_GHmac]](hmac: NullablePointer[_GHmac] tag)
use @g_hmac_ref[NullablePointer[_GHmac]](hmac: NullablePointer[_GHmac] tag)
use @g_hmac_unref[None](hmac: NullablePointer[_GHmac] tag)
use @g_hmac_update[None](hmac: NullablePointer[_GHmac] tag, data: Pointer[U8] tag, length: I64)
use @g_hmac_get_string[Pointer[U8]](hmac: NullablePointer[_GHmac] tag)
use @g_hmac_get_digest[None](hmac: NullablePointer[_GHmac] tag, buffer: Pointer[U8] tag, digestlen: Pointer[U64] tag)
use @g_compute_hmac_for_data[Pointer[U8]](digesttype: I32, key: Pointer[U8] tag, keylen: U64, data: Pointer[U8] tag, length: U64)
use @g_compute_hmac_for_string[Pointer[U8]](digesttype: I32, key: Pointer[U8] tag, keylen: U64, str: Pointer[U8] tag, length: I64)
use @g_compute_hmac_for_bytes[Pointer[U8]](digesttype: I32, key: NullablePointer[_GBytes] tag, data: NullablePointer[_GBytes] tag)
use @g_hook_list_init[None](hooklist: NullablePointer[_GHookList] tag, hooksize: U32)
use @g_hook_list_clear[None](hooklist: NullablePointer[_GHookList] tag)
use @g_hook_alloc[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag)
use @g_hook_free[None](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag)
use @g_hook_ref[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag)
use @g_hook_unref[None](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag)
use @g_hook_destroy[I32](hooklist: NullablePointer[_GHookList] tag, hookid: U64)
use @g_hook_destroy_link[None](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag)
use @g_hook_prepend[None](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag)
use @g_hook_insert_before[None](hooklist: NullablePointer[_GHookList] tag, sibling: NullablePointer[_GHook] tag, hook: NullablePointer[_GHook] tag)
use @g_hook_insert_sorted[None](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag, func: Pointer[None] tag)
use @g_hook_get[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, hookid: U64)
use @g_hook_find[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, needvalids: I32, func: Pointer[None] tag, data: Pointer[None] tag)
use @g_hook_find_data[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, needvalids: I32, data: Pointer[None] tag)
use @g_hook_find_func[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, needvalids: I32, func: Pointer[None] tag)
use @g_hook_find_func_data[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, needvalids: I32, func: Pointer[None] tag, data: Pointer[None] tag)
use @g_hook_first_valid[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, maybeincall: I32)
use @g_hook_next_valid[NullablePointer[_GHook]](hooklist: NullablePointer[_GHookList] tag, hook: NullablePointer[_GHook] tag, maybeincall: I32)
use @g_hook_compare_ids[I32](newhook: NullablePointer[_GHook] tag, sibling: NullablePointer[_GHook] tag)
use @g_hook_list_invoke[None](hooklist: NullablePointer[_GHookList] tag, mayrecurse: I32)
use @g_hook_list_invoke_check[None](hooklist: NullablePointer[_GHookList] tag, mayrecurse: I32)
use @g_hook_list_marshal[None](hooklist: NullablePointer[_GHookList] tag, mayrecurse: I32, marshaller: Pointer[None] tag, marshaldata: Pointer[None] tag)
use @g_hook_list_marshal_check[None](hooklist: NullablePointer[_GHookList] tag, mayrecurse: I32, marshaller: Pointer[None] tag, marshaldata: Pointer[None] tag)
use @g_hostname_is_non_ascii[I32](hostname: Pointer[U8] tag)
use @g_hostname_is_ascii_encoded[I32](hostname: Pointer[U8] tag)
use @g_hostname_is_ip_address[I32](hostname: Pointer[U8] tag)
use @g_hostname_to_ascii[Pointer[U8]](hostname: Pointer[U8] tag)
use @g_hostname_to_unicode[Pointer[U8]](hostname: Pointer[U8] tag)
use @g_poll[I32](fds: NullablePointer[_GPollFD] tag, nfds: U32, timeout: I32)
use @g_slist_alloc[NullablePointer[_GSList]]()
use @g_slist_free[None](list: NullablePointer[_GSList] tag)
use @g_slist_free_1[None](list: NullablePointer[_GSList] tag)
use @g_slist_free_full[None](list: NullablePointer[_GSList] tag, freefunc: Pointer[None] tag)
use @g_slist_append[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_prepend[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_insert[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag, position: I32)
use @g_slist_insert_sorted[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag, func: Pointer[None] tag)
use @g_slist_insert_sorted_with_data[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_slist_insert_before[NullablePointer[_GSList]](slist: NullablePointer[_GSList] tag, sibling: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_concat[NullablePointer[_GSList]](list1: NullablePointer[_GSList] tag, list2: NullablePointer[_GSList] tag)
use @g_slist_remove[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_remove_all[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_remove_link[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, link: NullablePointer[_GSList] tag)
use @g_slist_delete_link[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, link: NullablePointer[_GSList] tag)
use @g_slist_reverse[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag)
use @g_slist_copy[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag)
use @g_slist_copy_deep[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_slist_nth[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, n: U32)
use @g_slist_find[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_find_custom[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, data: Pointer[None] tag, func: Pointer[None] tag)
use @g_slist_position[I32](list: NullablePointer[_GSList] tag, llink: NullablePointer[_GSList] tag)
use @g_slist_index[I32](list: NullablePointer[_GSList] tag, data: Pointer[None] tag)
use @g_slist_last[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag)
use @g_slist_length[U32](list: NullablePointer[_GSList] tag)
use @g_slist_foreach[None](list: NullablePointer[_GSList] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_slist_sort[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, comparefunc: Pointer[None] tag)
use @g_slist_sort_with_data[NullablePointer[_GSList]](list: NullablePointer[_GSList] tag, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_slist_nth_data[Pointer[None]](list: NullablePointer[_GSList] tag, n: U32)
use @g_clear_slist[None](slistptr: Pointer[NullablePointer[_GSList]] tag, destroy: Pointer[None] tag)
use @g_main_context_new[NullablePointer[_GMainContext]]()
use @g_main_context_ref[NullablePointer[_GMainContext]](context: NullablePointer[_GMainContext] tag)
use @g_main_context_unref[None](context: NullablePointer[_GMainContext] tag)
use @g_main_context_default[NullablePointer[_GMainContext]]()
use @g_main_context_iteration[I32](context: NullablePointer[_GMainContext] tag, mayblock: I32)
use @g_main_context_pending[I32](context: NullablePointer[_GMainContext] tag)
use @g_main_context_find_source_by_id[NullablePointer[_GSource]](context: NullablePointer[_GMainContext] tag, sourceid: U32)
use @g_main_context_find_source_by_user_data[NullablePointer[_GSource]](context: NullablePointer[_GMainContext] tag, userdata: Pointer[None] tag)
use @g_main_context_find_source_by_funcs_user_data[NullablePointer[_GSource]](context: NullablePointer[_GMainContext] tag, funcs: NullablePointer[_GSourceFuncs] tag, userdata: Pointer[None] tag)
use @g_main_context_wakeup[None](context: NullablePointer[_GMainContext] tag)
use @g_main_context_acquire[I32](context: NullablePointer[_GMainContext] tag)
use @g_main_context_release[None](context: NullablePointer[_GMainContext] tag)
use @g_main_context_is_owner[I32](context: NullablePointer[_GMainContext] tag)
use @g_main_context_wait[I32](context: NullablePointer[_GMainContext] tag, cond: NullablePointer[_GCond] tag, mutex: Pointer[None] tag)
use @g_main_context_prepare[I32](context: NullablePointer[_GMainContext] tag, priority: Pointer[I32] tag)
use @g_main_context_query[I32](context: NullablePointer[_GMainContext] tag, maxpriority: I32, timeout: Pointer[I32] tag, fds: NullablePointer[_GPollFD] tag, nfds: I32)
use @g_main_context_check[I32](context: NullablePointer[_GMainContext] tag, maxpriority: I32, fds: NullablePointer[_GPollFD] tag, nfds: I32)
use @g_main_context_dispatch[None](context: NullablePointer[_GMainContext] tag)
use @g_main_context_set_poll_func[None](context: NullablePointer[_GMainContext] tag, func: Pointer[None] tag)
use @g_main_context_get_poll_func[Pointer[None]](context: NullablePointer[_GMainContext] tag)
use @g_main_context_add_poll[None](context: NullablePointer[_GMainContext] tag, fd: NullablePointer[_GPollFD] tag, priority: I32)
use @g_main_context_remove_poll[None](context: NullablePointer[_GMainContext] tag, fd: NullablePointer[_GPollFD] tag)
use @g_main_depth[I32]()
use @g_main_current_source[NullablePointer[_GSource]]()
use @g_main_context_push_thread_default[None](context: NullablePointer[_GMainContext] tag)
use @g_main_context_pop_thread_default[None](context: NullablePointer[_GMainContext] tag)
use @g_main_context_get_thread_default[NullablePointer[_GMainContext]]()
use @g_main_context_ref_thread_default[NullablePointer[_GMainContext]]()
use @g_main_context_pusher_new[Pointer[None]](maincontext: NullablePointer[_GMainContext] tag)
use @g_main_context_pusher_free[None](pusher: Pointer[None] tag)
use @g_main_loop_new[NullablePointer[_GMainLoop]](context: NullablePointer[_GMainContext] tag, isrunning: I32)
use @g_main_loop_run[None](loop: NullablePointer[_GMainLoop] tag)
use @g_main_loop_quit[None](loop: NullablePointer[_GMainLoop] tag)
use @g_main_loop_ref[NullablePointer[_GMainLoop]](loop: NullablePointer[_GMainLoop] tag)
use @g_main_loop_unref[None](loop: NullablePointer[_GMainLoop] tag)
use @g_main_loop_is_running[I32](loop: NullablePointer[_GMainLoop] tag)
use @g_main_loop_get_context[NullablePointer[_GMainContext]](loop: NullablePointer[_GMainLoop] tag)
use @g_source_new[NullablePointer[_GSource]](sourcefuncs: NullablePointer[_GSourceFuncs] tag, structsize: U32)
use @g_source_set_dispose_function[None](source: NullablePointer[_GSource] tag, dispose: Pointer[None] tag)
use @g_source_ref[NullablePointer[_GSource]](source: NullablePointer[_GSource] tag)
use @g_source_unref[None](source: NullablePointer[_GSource] tag)
use @g_source_attach[U32](source: NullablePointer[_GSource] tag, context: NullablePointer[_GMainContext] tag)
use @g_source_destroy[None](source: NullablePointer[_GSource] tag)
use @g_source_set_priority[None](source: NullablePointer[_GSource] tag, priority: I32)
use @g_source_get_priority[I32](source: NullablePointer[_GSource] tag)
use @g_source_set_can_recurse[None](source: NullablePointer[_GSource] tag, canrecurse: I32)
use @g_source_get_can_recurse[I32](source: NullablePointer[_GSource] tag)
use @g_source_get_id[U32](source: NullablePointer[_GSource] tag)
use @g_source_get_context[NullablePointer[_GMainContext]](source: NullablePointer[_GSource] tag)
use @g_source_set_callback[None](source: NullablePointer[_GSource] tag, func: Pointer[None] tag, data: Pointer[None] tag, notify: Pointer[None] tag)
use @g_source_set_funcs[None](source: NullablePointer[_GSource] tag, funcs: NullablePointer[_GSourceFuncs] tag)
use @g_source_is_destroyed[I32](source: NullablePointer[_GSource] tag)
use @g_source_set_name[None](source: NullablePointer[_GSource] tag, name: Pointer[U8] tag)
use @g_source_set_static_name[None](source: NullablePointer[_GSource] tag, name: Pointer[U8] tag)
use @g_source_get_name[Pointer[U8]](source: NullablePointer[_GSource] tag)
use @g_source_set_name_by_id[None](gtag: U32, name: Pointer[U8] tag)
use @g_source_set_ready_time[None](source: NullablePointer[_GSource] tag, readytime: I64)
use @g_source_get_ready_time[I64](source: NullablePointer[_GSource] tag)
use @g_source_add_unix_fd[Pointer[None]](source: NullablePointer[_GSource] tag, fd: I32, events: I32)
use @g_source_modify_unix_fd[None](source: NullablePointer[_GSource] tag, gtag: Pointer[None] tag, newevents: I32)
use @g_source_remove_unix_fd[None](source: NullablePointer[_GSource] tag, gtag: Pointer[None] tag)
use @g_source_query_unix_fd[I32](source: NullablePointer[_GSource] tag, gtag: Pointer[None] tag)
use @g_source_set_callback_indirect[None](source: NullablePointer[_GSource] tag, callbackdata: Pointer[None] tag, callbackfuncs: NullablePointer[_GSourceCallbackFuncs] tag)
use @g_source_add_poll[None](source: NullablePointer[_GSource] tag, fd: NullablePointer[_GPollFD] tag)
use @g_source_remove_poll[None](source: NullablePointer[_GSource] tag, fd: NullablePointer[_GPollFD] tag)
use @g_source_add_child_source[None](source: NullablePointer[_GSource] tag, childsource: NullablePointer[_GSource] tag)
use @g_source_remove_child_source[None](source: NullablePointer[_GSource] tag, childsource: NullablePointer[_GSource] tag)
use @g_source_get_current_time[None](source: NullablePointer[_GSource] tag, timeval: NullablePointer[_GTimeVal] tag)
use @g_source_get_time[I64](source: NullablePointer[_GSource] tag)
use @g_idle_source_new[NullablePointer[_GSource]]()
use @g_child_watch_source_new[NullablePointer[_GSource]](pid: I32)
use @g_timeout_source_new[NullablePointer[_GSource]](interval: U32)
use @g_timeout_source_new_seconds[NullablePointer[_GSource]](interval: U32)
use @g_get_current_time[None](result: NullablePointer[_GTimeVal] tag)
use @g_get_monotonic_time[I64]()
use @g_get_real_time[I64]()
use @g_source_remove[I32](gtag: U32)
use @g_source_remove_by_user_data[I32](userdata: Pointer[None] tag)
use @g_source_remove_by_funcs_user_data[I32](funcs: NullablePointer[_GSourceFuncs] tag, userdata: Pointer[None] tag)
use @g_clear_handle_id[None](tagptr: Pointer[U32] tag, clearfunc: Pointer[None] tag)
use @g_timeout_add_full[U32](priority: I32, interval: U32, function: Pointer[None] tag, data: Pointer[None] tag, notify: Pointer[None] tag)
use @g_timeout_add[U32](interval: U32, function: Pointer[None] tag, data: Pointer[None] tag)
use @g_timeout_add_seconds_full[U32](priority: I32, interval: U32, function: Pointer[None] tag, data: Pointer[None] tag, notify: Pointer[None] tag)
use @g_timeout_add_seconds[U32](interval: U32, function: Pointer[None] tag, data: Pointer[None] tag)
use @g_child_watch_add_full[U32](priority: I32, pid: I32, function: Pointer[None] tag, data: Pointer[None] tag, notify: Pointer[None] tag)
use @g_child_watch_add[U32](pid: I32, function: Pointer[None] tag, data: Pointer[None] tag)
use @g_idle_add[U32](function: Pointer[None] tag, data: Pointer[None] tag)
use @g_idle_add_full[U32](priority: I32, function: Pointer[None] tag, data: Pointer[None] tag, notify: Pointer[None] tag)
use @g_idle_remove_by_data[I32](data: Pointer[None] tag)
use @g_main_context_invoke_full[None](context: NullablePointer[_GMainContext] tag, priority: I32, function: Pointer[None] tag, data: Pointer[None] tag, notify: Pointer[None] tag)
use @g_main_context_invoke[None](context: NullablePointer[_GMainContext] tag, function: Pointer[None] tag, data: Pointer[None] tag)
use @g_steal_fd[I32](fdptr: Pointer[I32] tag)
use @g_unicode_script_to_iso15924[U32](script: I32)
use @g_unicode_script_from_iso15924[I32](iso15924: U32)
use @g_unichar_isalnum[I32](c: U32)
use @g_unichar_isalpha[I32](c: U32)
use @g_unichar_iscntrl[I32](c: U32)
use @g_unichar_isdigit[I32](c: U32)
use @g_unichar_isgraph[I32](c: U32)
use @g_unichar_islower[I32](c: U32)
use @g_unichar_isprint[I32](c: U32)
use @g_unichar_ispunct[I32](c: U32)
use @g_unichar_isspace[I32](c: U32)
use @g_unichar_isupper[I32](c: U32)
use @g_unichar_isxdigit[I32](c: U32)
use @g_unichar_istitle[I32](c: U32)
use @g_unichar_isdefined[I32](c: U32)
use @g_unichar_iswide[I32](c: U32)
use @g_unichar_iswide_cjk[I32](c: U32)
use @g_unichar_iszerowidth[I32](c: U32)
use @g_unichar_ismark[I32](c: U32)
use @g_unichar_toupper[U32](c: U32)
use @g_unichar_tolower[U32](c: U32)
use @g_unichar_totitle[U32](c: U32)
use @g_unichar_digit_value[I32](c: U32)
use @g_unichar_xdigit_value[I32](c: U32)
use @g_unichar_type[I32](c: U32)
use @g_unichar_break_type[I32](c: U32)
use @g_unichar_combining_class[I32](uc: U32)
use @g_unichar_get_mirror_char[I32](ch: U32, mirroredch: Pointer[U32] tag)
use @g_unichar_get_script[I32](ch: U32)
use @g_unichar_validate[I32](ch: U32)
use @g_unichar_compose[I32](a: U32, b: U32, ch: Pointer[U32] tag)
use @g_unichar_decompose[I32](ch: U32, a: Pointer[U32] tag, b: Pointer[U32] tag)
use @g_unichar_fully_decompose[U64](ch: U32, compat: I32, result: Pointer[U32] tag, resultlen: U64)
use @g_unicode_canonical_ordering[None](string: Pointer[U32] tag, len: U64)
use @g_unicode_canonical_decomposition[Pointer[U32]](ch: U32, resultlen: Pointer[U64] tag)
use @g_utf8_get_char[U32](p: Pointer[U8] tag)
use @g_utf8_get_char_validated[U32](p: Pointer[U8] tag, maxlen: I64)
use @g_utf8_offset_to_pointer[Pointer[U8]](str: Pointer[U8] tag, offset: I64)
use @g_utf8_pointer_to_offset[I64](str: Pointer[U8] tag, pos: Pointer[U8] tag)
use @g_utf8_prev_char[Pointer[U8]](p: Pointer[U8] tag)
use @g_utf8_find_next_char[Pointer[U8]](p: Pointer[U8] tag, gend: Pointer[U8] tag)
use @g_utf8_find_prev_char[Pointer[U8]](str: Pointer[U8] tag, p: Pointer[U8] tag)
use @g_utf8_strlen[I64](p: Pointer[U8] tag, max: I64)
use @g_utf8_substring[Pointer[U8]](str: Pointer[U8] tag, startpos: I64, endpos: I64)
use @g_utf8_strncpy[Pointer[U8]](dest: Pointer[U8] tag, src: Pointer[U8] tag, n: U64)
use @g_utf8_strchr[Pointer[U8]](p: Pointer[U8] tag, len: I64, c: U32)
use @g_utf8_strrchr[Pointer[U8]](p: Pointer[U8] tag, len: I64, c: U32)
use @g_utf8_strreverse[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_utf8_to_utf16[Pointer[U16]](str: Pointer[U8] tag, len: I64, itemsread: Pointer[I64] tag, itemswritten: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_utf8_to_ucs4[Pointer[U32]](str: Pointer[U8] tag, len: I64, itemsread: Pointer[I64] tag, itemswritten: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_utf8_to_ucs4_fast[Pointer[U32]](str: Pointer[U8] tag, len: I64, itemswritten: Pointer[I64] tag)
use @g_utf16_to_ucs4[Pointer[U32]](str: Pointer[U16] tag, len: I64, itemsread: Pointer[I64] tag, itemswritten: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_utf16_to_utf8[Pointer[U8]](str: Pointer[U16] tag, len: I64, itemsread: Pointer[I64] tag, itemswritten: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_ucs4_to_utf16[Pointer[U16]](str: Pointer[U32] tag, len: I64, itemsread: Pointer[I64] tag, itemswritten: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_ucs4_to_utf8[Pointer[U8]](str: Pointer[U32] tag, len: I64, itemsread: Pointer[I64] tag, itemswritten: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_unichar_to_utf8[I32](c: U32, outbuf: Pointer[U8] tag)
use @g_utf8_validate[I32](str: Pointer[U8] tag, maxlen: I64, gend: Pointer[Pointer[U8]] tag)
use @g_utf8_validate_len[I32](str: Pointer[U8] tag, maxlen: U64, gend: Pointer[Pointer[U8]] tag)
use @g_utf8_strup[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_utf8_strdown[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_utf8_casefold[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_utf8_normalize[Pointer[U8]](str: Pointer[U8] tag, len: I64, mode: I32)
use @g_utf8_collate[I32](str1: Pointer[U8] tag, str2: Pointer[U8] tag)
use @g_utf8_collate_key[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_utf8_collate_key_for_filename[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_utf8_make_valid[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_string_new[NullablePointer[_GString]](init: Pointer[U8] tag)
use @g_string_new_len[NullablePointer[_GString]](init: Pointer[U8] tag, len: I64)
use @g_string_sized_new[NullablePointer[_GString]](dflsize: U64)
use @g_string_free[Pointer[U8]](string: NullablePointer[_GString] tag, freesegment: I32)
use @g_string_free_to_bytes[NullablePointer[_GBytes]](string: NullablePointer[_GString] tag)
use @g_string_equal[I32](v: NullablePointer[_GString] tag, v2: NullablePointer[_GString] tag)
use @g_string_hash[U32](str: NullablePointer[_GString] tag)
use @g_string_assign[NullablePointer[_GString]](string: NullablePointer[_GString] tag, rval: Pointer[U8] tag)
use @g_string_truncate[NullablePointer[_GString]](string: NullablePointer[_GString] tag, len: U64)
use @g_string_set_size[NullablePointer[_GString]](string: NullablePointer[_GString] tag, len: U64)
use @g_string_insert_len[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: I64, gval: Pointer[U8] tag, len: I64)
use @g_string_append[NullablePointer[_GString]](string: NullablePointer[_GString] tag, gval: Pointer[U8] tag)
use @g_string_append_len[NullablePointer[_GString]](string: NullablePointer[_GString] tag, gval: Pointer[U8] tag, len: I64)
use @g_string_append_c[NullablePointer[_GString]](string: NullablePointer[_GString] tag, c: U8)
use @g_string_append_unichar[NullablePointer[_GString]](string: NullablePointer[_GString] tag, wc: U32)
use @g_string_prepend[NullablePointer[_GString]](string: NullablePointer[_GString] tag, gval: Pointer[U8] tag)
use @g_string_prepend_c[NullablePointer[_GString]](string: NullablePointer[_GString] tag, c: U8)
use @g_string_prepend_unichar[NullablePointer[_GString]](string: NullablePointer[_GString] tag, wc: U32)
use @g_string_prepend_len[NullablePointer[_GString]](string: NullablePointer[_GString] tag, gval: Pointer[U8] tag, len: I64)
use @g_string_insert[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: I64, gval: Pointer[U8] tag)
use @g_string_insert_c[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: I64, c: U8)
use @g_string_insert_unichar[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: I64, wc: U32)
use @g_string_overwrite[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: U64, gval: Pointer[U8] tag)
use @g_string_overwrite_len[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: U64, gval: Pointer[U8] tag, len: I64)
use @g_string_erase[NullablePointer[_GString]](string: NullablePointer[_GString] tag, pos: I64, len: I64)
use @g_string_replace[U32](string: NullablePointer[_GString] tag, find: Pointer[U8] tag, replace: Pointer[U8] tag, limit: U32)
use @g_string_ascii_down[NullablePointer[_GString]](string: NullablePointer[_GString] tag)
use @g_string_ascii_up[NullablePointer[_GString]](string: NullablePointer[_GString] tag)
use @g_string_append_uri_escaped[NullablePointer[_GString]](string: NullablePointer[_GString] tag, unescaped: Pointer[U8] tag, reservedcharsallowed: Pointer[U8] tag, allowutf8: I32)
use @g_string_append_c_inline[NullablePointer[_GString]](gstring: NullablePointer[_GString] tag, c: U8)
use @g_string_down[NullablePointer[_GString]](string: NullablePointer[_GString] tag)
use @g_string_up[NullablePointer[_GString]](string: NullablePointer[_GString] tag)
use @g_io_channel_init[None](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_ref[NullablePointer[_GIOChannel]](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_unref[None](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_read[I32](channel: NullablePointer[_GIOChannel] tag, buf: Pointer[U8] tag, count: U64, bytesread: Pointer[U64] tag)
use @g_io_channel_write[I32](channel: NullablePointer[_GIOChannel] tag, buf: Pointer[U8] tag, count: U64, byteswritten: Pointer[U64] tag)
use @g_io_channel_seek[I32](channel: NullablePointer[_GIOChannel] tag, offset: I64, gtype: I32)
use @g_io_channel_close[None](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_shutdown[I32](channel: NullablePointer[_GIOChannel] tag, flush: I32, err: Pointer[NullablePointer[_GError]] tag)
use @g_io_add_watch_full[U32](channel: NullablePointer[_GIOChannel] tag, priority: I32, condition: I32, func: Pointer[None] tag, userdata: Pointer[None] tag, notify: Pointer[None] tag)
use @g_io_create_watch[NullablePointer[_GSource]](channel: NullablePointer[_GIOChannel] tag, condition: I32)
use @g_io_add_watch[U32](channel: NullablePointer[_GIOChannel] tag, condition: I32, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_io_channel_set_buffer_size[None](channel: NullablePointer[_GIOChannel] tag, size: U64)
use @g_io_channel_get_buffer_size[U64](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_get_buffer_condition[I32](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_set_flags[I32](channel: NullablePointer[_GIOChannel] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_get_flags[I32](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_set_line_term[None](channel: NullablePointer[_GIOChannel] tag, lineterm: Pointer[U8] tag, length: I32)
use @g_io_channel_get_line_term[Pointer[U8]](channel: NullablePointer[_GIOChannel] tag, length: Pointer[I32] tag)
use @g_io_channel_set_buffered[None](channel: NullablePointer[_GIOChannel] tag, buffered: I32)
use @g_io_channel_get_buffered[I32](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_set_encoding[I32](channel: NullablePointer[_GIOChannel] tag, encoding: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_get_encoding[Pointer[U8]](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_set_close_on_unref[None](channel: NullablePointer[_GIOChannel] tag, doclose: I32)
use @g_io_channel_get_close_on_unref[I32](channel: NullablePointer[_GIOChannel] tag)
use @g_io_channel_flush[I32](channel: NullablePointer[_GIOChannel] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_read_line[I32](channel: NullablePointer[_GIOChannel] tag, strreturn: Pointer[Pointer[U8]] tag, length: Pointer[U64] tag, terminatorpos: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_read_line_string[I32](channel: NullablePointer[_GIOChannel] tag, buffer: NullablePointer[_GString] tag, terminatorpos: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_read_to_end[I32](channel: NullablePointer[_GIOChannel] tag, strreturn: Pointer[Pointer[U8]] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_read_chars[I32](channel: NullablePointer[_GIOChannel] tag, buf: Pointer[U8] tag, count: U64, bytesread: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_read_unichar[I32](channel: NullablePointer[_GIOChannel] tag, thechar: Pointer[U32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_write_chars[I32](channel: NullablePointer[_GIOChannel] tag, buf: Pointer[U8] tag, count: I64, byteswritten: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_write_unichar[I32](channel: NullablePointer[_GIOChannel] tag, thechar: U32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_seek_position[I32](channel: NullablePointer[_GIOChannel] tag, offset: I64, gtype: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_new_file[NullablePointer[_GIOChannel]](filename: Pointer[U8] tag, mode: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_io_channel_error_quark[U32]()
use @g_io_channel_error_from_errno[I32](en: I32)
use @g_io_channel_unix_new[NullablePointer[_GIOChannel]](fd: I32)
use @g_io_channel_unix_get_fd[I32](channel: NullablePointer[_GIOChannel] tag)
use @g_key_file_error_quark[U32]()
use @g_key_file_new[NullablePointer[_GKeyFile]]()
use @g_key_file_ref[NullablePointer[_GKeyFile]](keyfile: NullablePointer[_GKeyFile] tag)
use @g_key_file_unref[None](keyfile: NullablePointer[_GKeyFile] tag)
use @g_key_file_free[None](keyfile: NullablePointer[_GKeyFile] tag)
use @g_key_file_set_list_separator[None](keyfile: NullablePointer[_GKeyFile] tag, separator: U8)
use @g_key_file_load_from_file[I32](keyfile: NullablePointer[_GKeyFile] tag, file: Pointer[U8] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_load_from_data[I32](keyfile: NullablePointer[_GKeyFile] tag, data: Pointer[U8] tag, length: U64, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_load_from_bytes[I32](keyfile: NullablePointer[_GKeyFile] tag, bytes: NullablePointer[_GBytes] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_load_from_dirs[I32](keyfile: NullablePointer[_GKeyFile] tag, file: Pointer[U8] tag, searchdirs: Pointer[Pointer[U8]] tag, fullpath: Pointer[Pointer[U8]] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_load_from_data_dirs[I32](keyfile: NullablePointer[_GKeyFile] tag, file: Pointer[U8] tag, fullpath: Pointer[Pointer[U8]] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_to_data[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_save_to_file[I32](keyfile: NullablePointer[_GKeyFile] tag, filename: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_get_start_group[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag)
use @g_key_file_get_groups[Pointer[Pointer[U8]]](keyfile: NullablePointer[_GKeyFile] tag, length: Pointer[U64] tag)
use @g_key_file_get_keys[Pointer[Pointer[U8]]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_has_group[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag)
use @g_key_file_has_key[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_get_value[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_value[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, value: Pointer[U8] tag)
use @g_key_file_get_string[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_string[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, string: Pointer[U8] tag)
use @g_key_file_get_locale_string[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, locale: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_get_locale_for_key[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, locale: Pointer[U8] tag)
use @g_key_file_set_locale_string[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, locale: Pointer[U8] tag, string: Pointer[U8] tag)
use @g_key_file_get_boolean[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_boolean[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, value: I32)
use @g_key_file_get_integer[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_integer[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, value: I32)
use @g_key_file_get_int64[I64](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_int64[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, value: I64)
use @g_key_file_get_uint64[U64](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_uint64[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, value: U64)
use @g_key_file_get_double[F64](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_double[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, value: F64)
use @g_key_file_get_string_list[Pointer[Pointer[U8]]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_string_list[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, list: Pointer[Pointer[U8]] tag, length: U64)
use @g_key_file_get_locale_string_list[Pointer[Pointer[U8]]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, locale: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_locale_string_list[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, locale: Pointer[U8] tag, list: Pointer[Pointer[U8]] tag, length: U64)
use @g_key_file_get_boolean_list[Pointer[I32]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_boolean_list[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, list: Pointer[I32] tag, length: U64)
use @g_key_file_get_integer_list[Pointer[I32]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_double_list[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, list: Pointer[F64] tag, length: U64)
use @g_key_file_get_double_list[Pointer[F64]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, length: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_set_integer_list[None](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, list: Pointer[I32] tag, length: U64)
use @g_key_file_set_comment[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, comment: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_get_comment[Pointer[U8]](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_remove_comment[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_remove_key[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, key: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_key_file_remove_group[I32](keyfile: NullablePointer[_GKeyFile] tag, groupname: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_mapped_file_new[NullablePointer[_GMappedFile]](filename: Pointer[U8] tag, writable: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_mapped_file_new_from_fd[NullablePointer[_GMappedFile]](fd: I32, writable: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_mapped_file_get_length[U64](file: NullablePointer[_GMappedFile] tag)
use @g_mapped_file_get_contents[Pointer[U8]](file: NullablePointer[_GMappedFile] tag)
use @g_mapped_file_get_bytes[NullablePointer[_GBytes]](file: NullablePointer[_GMappedFile] tag)
use @g_mapped_file_ref[NullablePointer[_GMappedFile]](file: NullablePointer[_GMappedFile] tag)
use @g_mapped_file_unref[None](file: NullablePointer[_GMappedFile] tag)
use @g_mapped_file_free[None](file: NullablePointer[_GMappedFile] tag)
use @g_markup_error_quark[U32]()
use @g_markup_parse_context_new[NullablePointer[_GMarkupParseContext]](parser: NullablePointer[_GMarkupParser] tag, flags: I32, userdata: Pointer[None] tag, userdatadnotify: Pointer[None] tag)
use @g_markup_parse_context_ref[NullablePointer[_GMarkupParseContext]](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_parse_context_unref[None](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_parse_context_free[None](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_parse_context_parse[I32](context: NullablePointer[_GMarkupParseContext] tag, text: Pointer[U8] tag, textlen: I64, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_markup_parse_context_push[None](context: NullablePointer[_GMarkupParseContext] tag, parser: NullablePointer[_GMarkupParser] tag, userdata: Pointer[None] tag)
use @g_markup_parse_context_pop[Pointer[None]](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_parse_context_end_parse[I32](context: NullablePointer[_GMarkupParseContext] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_markup_parse_context_get_element[Pointer[U8]](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_parse_context_get_element_stack[NullablePointer[_GSList]](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_parse_context_get_position[None](context: NullablePointer[_GMarkupParseContext] tag, linenumber: Pointer[I32] tag, charnumber: Pointer[I32] tag)
use @g_markup_parse_context_get_user_data[Pointer[None]](context: NullablePointer[_GMarkupParseContext] tag)
use @g_markup_escape_text[Pointer[U8]](text: Pointer[U8] tag, length: I64)
use @g_variant_type_string_is_valid[I32](typestring: Pointer[U8] tag)
use @g_variant_type_string_scan[I32](string: Pointer[U8] tag, limit: Pointer[U8] tag, endptr: Pointer[Pointer[U8]] tag)
use @g_variant_type_free[None](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_copy[NullablePointer[_GVariantType]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_new[NullablePointer[_GVariantType]](typestring: Pointer[U8] tag)
use @g_variant_type_get_string_length[U64](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_peek_string[Pointer[U8]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_dup_string[Pointer[U8]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_definite[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_container[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_basic[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_maybe[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_array[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_tuple[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_dict_entry[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_is_variant[I32](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_hash[U32](gtype: Pointer[None] tag)
use @g_variant_type_equal[I32](type1: Pointer[None] tag, type2: Pointer[None] tag)
use @g_variant_type_is_subtype_of[I32](gtype: NullablePointer[_GVariantType] tag, supertype: NullablePointer[_GVariantType] tag)
use @g_variant_type_element[NullablePointer[_GVariantType]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_first[NullablePointer[_GVariantType]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_next[NullablePointer[_GVariantType]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_n_items[U64](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_key[NullablePointer[_GVariantType]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_value[NullablePointer[_GVariantType]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_type_new_array[NullablePointer[_GVariantType]](element: NullablePointer[_GVariantType] tag)
use @g_variant_type_new_maybe[NullablePointer[_GVariantType]](element: NullablePointer[_GVariantType] tag)
use @g_variant_type_new_tuple[NullablePointer[_GVariantType]](items: Pointer[NullablePointer[_GVariantType]] tag, length: I32)
use @g_variant_type_new_dict_entry[NullablePointer[_GVariantType]](key: NullablePointer[_GVariantType] tag, value: NullablePointer[_GVariantType] tag)
use @g_variant_type_checked_[NullablePointer[_GVariantType]](parg0: Pointer[U8] tag)
use @g_variant_type_string_get_depth_[U64](typestring: Pointer[U8] tag)
use @g_variant_unref[None](value: NullablePointer[_GVariant] tag)
use @g_variant_ref[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_ref_sink[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_is_floating[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_take_ref[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_get_type[NullablePointer[_GVariantType]](value: NullablePointer[_GVariant] tag)
use @g_variant_get_type_string[Pointer[U8]](value: NullablePointer[_GVariant] tag)
use @g_variant_is_of_type[I32](value: NullablePointer[_GVariant] tag, gtype: NullablePointer[_GVariantType] tag)
use @g_variant_is_container[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_classify[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_new_boolean[NullablePointer[_GVariant]](value: I32)
use @g_variant_new_byte[NullablePointer[_GVariant]](value: U8)
use @g_variant_new_int16[NullablePointer[_GVariant]](value: I16)
use @g_variant_new_uint16[NullablePointer[_GVariant]](value: U16)
use @g_variant_new_int32[NullablePointer[_GVariant]](value: I32)
use @g_variant_new_uint32[NullablePointer[_GVariant]](value: U32)
use @g_variant_new_int64[NullablePointer[_GVariant]](value: I64)
use @g_variant_new_uint64[NullablePointer[_GVariant]](value: U64)
use @g_variant_new_handle[NullablePointer[_GVariant]](value: I32)
use @g_variant_new_double[NullablePointer[_GVariant]](value: F64)
use @g_variant_new_string[NullablePointer[_GVariant]](string: Pointer[U8] tag)
use @g_variant_new_take_string[NullablePointer[_GVariant]](string: Pointer[U8] tag)
use @g_variant_new_object_path[NullablePointer[_GVariant]](objectpath: Pointer[U8] tag)
use @g_variant_is_object_path[I32](string: Pointer[U8] tag)
use @g_variant_new_signature[NullablePointer[_GVariant]](signature: Pointer[U8] tag)
use @g_variant_is_signature[I32](string: Pointer[U8] tag)
use @g_variant_new_variant[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_new_strv[NullablePointer[_GVariant]](strv: Pointer[Pointer[U8]] tag, length: I64)
use @g_variant_new_objv[NullablePointer[_GVariant]](strv: Pointer[Pointer[U8]] tag, length: I64)
use @g_variant_new_bytestring[NullablePointer[_GVariant]](string: Pointer[U8] tag)
use @g_variant_new_bytestring_array[NullablePointer[_GVariant]](strv: Pointer[Pointer[U8]] tag, length: I64)
use @g_variant_new_fixed_array[NullablePointer[_GVariant]](elementtype: NullablePointer[_GVariantType] tag, elements: Pointer[None] tag, nelements: U64, elementsize: U64)
use @g_variant_get_boolean[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_get_byte[U8](value: NullablePointer[_GVariant] tag)
use @g_variant_get_int16[I16](value: NullablePointer[_GVariant] tag)
use @g_variant_get_uint16[U16](value: NullablePointer[_GVariant] tag)
use @g_variant_get_int32[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_get_uint32[U32](value: NullablePointer[_GVariant] tag)
use @g_variant_get_int64[I64](value: NullablePointer[_GVariant] tag)
use @g_variant_get_uint64[U64](value: NullablePointer[_GVariant] tag)
use @g_variant_get_handle[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_get_double[F64](value: NullablePointer[_GVariant] tag)
use @g_variant_get_variant[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_get_string[Pointer[U8]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_dup_string[Pointer[U8]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_get_strv[Pointer[Pointer[U8]]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_dup_strv[Pointer[Pointer[U8]]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_get_objv[Pointer[Pointer[U8]]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_dup_objv[Pointer[Pointer[U8]]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_get_bytestring[Pointer[U8]](value: NullablePointer[_GVariant] tag)
use @g_variant_dup_bytestring[Pointer[U8]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_get_bytestring_array[Pointer[Pointer[U8]]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_dup_bytestring_array[Pointer[Pointer[U8]]](value: NullablePointer[_GVariant] tag, length: Pointer[U64] tag)
use @g_variant_new_maybe[NullablePointer[_GVariant]](childtype: NullablePointer[_GVariantType] tag, child: NullablePointer[_GVariant] tag)
use @g_variant_new_array[NullablePointer[_GVariant]](childtype: NullablePointer[_GVariantType] tag, children: Pointer[NullablePointer[_GVariant]] tag, nchildren: U64)
use @g_variant_new_tuple[NullablePointer[_GVariant]](children: Pointer[NullablePointer[_GVariant]] tag, nchildren: U64)
use @g_variant_new_dict_entry[NullablePointer[_GVariant]](key: NullablePointer[_GVariant] tag, value: NullablePointer[_GVariant] tag)
use @g_variant_get_maybe[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_n_children[U64](value: NullablePointer[_GVariant] tag)
use @g_variant_get_child_value[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag, index: U64)
use @g_variant_lookup_value[NullablePointer[_GVariant]](dictionary: NullablePointer[_GVariant] tag, key: Pointer[U8] tag, expectedtype: NullablePointer[_GVariantType] tag)
use @g_variant_get_fixed_array[Pointer[None]](value: NullablePointer[_GVariant] tag, nelements: Pointer[U64] tag, elementsize: U64)
use @g_variant_get_size[U64](value: NullablePointer[_GVariant] tag)
use @g_variant_get_data[Pointer[None]](value: NullablePointer[_GVariant] tag)
use @g_variant_get_data_as_bytes[NullablePointer[_GBytes]](value: NullablePointer[_GVariant] tag)
use @g_variant_store[None](value: NullablePointer[_GVariant] tag, data: Pointer[None] tag)
use @g_variant_print[Pointer[U8]](value: NullablePointer[_GVariant] tag, typeannotate: I32)
use @g_variant_print_string[NullablePointer[_GString]](value: NullablePointer[_GVariant] tag, string: NullablePointer[_GString] tag, typeannotate: I32)
use @g_variant_hash[U32](value: Pointer[None] tag)
use @g_variant_equal[I32](one: Pointer[None] tag, two: Pointer[None] tag)
use @g_variant_get_normal_form[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_is_normal_form[I32](value: NullablePointer[_GVariant] tag)
use @g_variant_byteswap[NullablePointer[_GVariant]](value: NullablePointer[_GVariant] tag)
use @g_variant_new_from_bytes[NullablePointer[_GVariant]](gtype: NullablePointer[_GVariantType] tag, bytes: NullablePointer[_GBytes] tag, trusted: I32)
use @g_variant_new_from_data[NullablePointer[_GVariant]](gtype: NullablePointer[_GVariantType] tag, data: Pointer[None] tag, size: U64, trusted: I32, notify: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_variant_iter_new[NullablePointer[_GVariantIter]](value: NullablePointer[_GVariant] tag)
use @g_variant_iter_init[U64](iter: NullablePointer[_GVariantIter] tag, value: NullablePointer[_GVariant] tag)
use @g_variant_iter_copy[NullablePointer[_GVariantIter]](iter: NullablePointer[_GVariantIter] tag)
use @g_variant_iter_n_children[U64](iter: NullablePointer[_GVariantIter] tag)
use @g_variant_iter_free[None](iter: NullablePointer[_GVariantIter] tag)
use @g_variant_iter_next_value[NullablePointer[_GVariant]](iter: NullablePointer[_GVariantIter] tag)
use @g_variant_parser_get_error_quark[U32]()
use @g_variant_parse_error_quark[U32]()
use @g_variant_builder_new[NullablePointer[_GVariantBuilder]](gtype: NullablePointer[_GVariantType] tag)
use @g_variant_builder_unref[None](builder: NullablePointer[_GVariantBuilder] tag)
use @g_variant_builder_ref[NullablePointer[_GVariantBuilder]](builder: NullablePointer[_GVariantBuilder] tag)
use @g_variant_builder_init[None](builder: NullablePointer[_GVariantBuilder] tag, gtype: NullablePointer[_GVariantType] tag)
use @g_variant_builder_end[NullablePointer[_GVariant]](builder: NullablePointer[_GVariantBuilder] tag)
use @g_variant_builder_clear[None](builder: NullablePointer[_GVariantBuilder] tag)
use @g_variant_builder_open[None](builder: NullablePointer[_GVariantBuilder] tag, gtype: NullablePointer[_GVariantType] tag)
use @g_variant_builder_close[None](builder: NullablePointer[_GVariantBuilder] tag)
use @g_variant_builder_add_value[None](builder: NullablePointer[_GVariantBuilder] tag, value: NullablePointer[_GVariant] tag)
use @g_variant_check_format_string[I32](value: NullablePointer[_GVariant] tag, formatstring: Pointer[U8] tag, copyonly: I32)
use @g_variant_parse[NullablePointer[_GVariant]](gtype: NullablePointer[_GVariantType] tag, text: Pointer[U8] tag, limit: Pointer[U8] tag, endptr: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_variant_parse_error_print_context[Pointer[U8]](gerror: NullablePointer[_GError] tag, sourcestr: Pointer[U8] tag)
use @g_variant_compare[I32](one: Pointer[None] tag, two: Pointer[None] tag)
use @g_variant_dict_new[NullablePointer[_GVariantDict]](fromasv: NullablePointer[_GVariant] tag)
use @g_variant_dict_init[None](dict: NullablePointer[_GVariantDict] tag, fromasv: NullablePointer[_GVariant] tag)
use @g_variant_dict_lookup_value[NullablePointer[_GVariant]](dict: NullablePointer[_GVariantDict] tag, key: Pointer[U8] tag, expectedtype: NullablePointer[_GVariantType] tag)
use @g_variant_dict_contains[I32](dict: NullablePointer[_GVariantDict] tag, key: Pointer[U8] tag)
use @g_variant_dict_insert_value[None](dict: NullablePointer[_GVariantDict] tag, key: Pointer[U8] tag, value: NullablePointer[_GVariant] tag)
use @g_variant_dict_remove[I32](dict: NullablePointer[_GVariantDict] tag, key: Pointer[U8] tag)
use @g_variant_dict_clear[None](dict: NullablePointer[_GVariantDict] tag)
use @g_variant_dict_end[NullablePointer[_GVariant]](dict: NullablePointer[_GVariantDict] tag)
use @g_variant_dict_ref[NullablePointer[_GVariantDict]](dict: NullablePointer[_GVariantDict] tag)
use @g_variant_dict_unref[None](dict: NullablePointer[_GVariantDict] tag)
use @g_log_set_handler[U32](logdomain: Pointer[U8] tag, loglevels: I32, logfunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_log_set_handler_full[U32](logdomain: Pointer[U8] tag, loglevels: I32, logfunc: Pointer[None] tag, userdata: Pointer[None] tag, destroy: Pointer[None] tag)
use @g_log_remove_handler[None](logdomain: Pointer[U8] tag, handlerid: U32)
use @g_log_default_handler[None](logdomain: Pointer[U8] tag, loglevel: I32, message: Pointer[U8] tag, unuseddata: Pointer[None] tag)
use @g_log_set_default_handler[Pointer[None]](logfunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_log_set_fatal_mask[I32](logdomain: Pointer[U8] tag, fatalmask: I32)
use @g_log_set_always_fatal[I32](fatalmask: I32)
use @g_log_structured_array[None](loglevel: I32, fields: NullablePointer[_GLogField] tag, nfields: U64)
use @g_log_variant[None](logdomain: Pointer[U8] tag, loglevel: I32, fields: NullablePointer[_GVariant] tag)
use @g_log_set_writer_func[None](func: Pointer[None] tag, userdata: Pointer[None] tag, userdatafree: Pointer[None] tag)
use @g_log_writer_supports_color[I32](outputfd: I32)
use @g_log_writer_is_journald[I32](outputfd: I32)
use @g_log_writer_format_fields[Pointer[U8]](loglevel: I32, fields: NullablePointer[_GLogField] tag, nfields: U64, usecolor: I32)
use @g_log_writer_journald[I32](loglevel: I32, fields: NullablePointer[_GLogField] tag, nfields: U64, userdata: Pointer[None] tag)
use @g_log_writer_standard_streams[I32](loglevel: I32, fields: NullablePointer[_GLogField] tag, nfields: U64, userdata: Pointer[None] tag)
use @g_log_writer_default[I32](loglevel: I32, fields: NullablePointer[_GLogField] tag, nfields: U64, userdata: Pointer[None] tag)
use @g_log_writer_default_set_use_stderr[None](usestderr: I32)
use @g_log_writer_default_would_drop[I32](loglevel: I32, logdomain: Pointer[U8] tag)
use @g_return_if_fail_warning[None](logdomain: Pointer[U8] tag, prettyfunction: Pointer[U8] tag, expression: Pointer[U8] tag)
use @g_warn_message[None](domain: Pointer[U8] tag, file: Pointer[U8] tag, line: I32, func: Pointer[U8] tag, warnexpr: Pointer[U8] tag)
use @g_assert_warning[None](logdomain: Pointer[U8] tag, file: Pointer[U8] tag, line: I32, prettyfunction: Pointer[U8] tag, expression: Pointer[U8] tag)
use @g_set_print_handler[Pointer[None]](func: Pointer[None] tag)
use @g_set_printerr_handler[Pointer[None]](func: Pointer[None] tag)
use @g_option_error_quark[U32]()
use @g_option_context_new[NullablePointer[_GOptionContext]](parameterstring: Pointer[U8] tag)
use @g_option_context_set_summary[None](context: NullablePointer[_GOptionContext] tag, summary: Pointer[U8] tag)
use @g_option_context_get_summary[Pointer[U8]](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_set_description[None](context: NullablePointer[_GOptionContext] tag, description: Pointer[U8] tag)
use @g_option_context_get_description[Pointer[U8]](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_free[None](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_set_help_enabled[None](context: NullablePointer[_GOptionContext] tag, helpenabled: I32)
use @g_option_context_get_help_enabled[I32](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_set_ignore_unknown_options[None](context: NullablePointer[_GOptionContext] tag, ignoreunknown: I32)
use @g_option_context_get_ignore_unknown_options[I32](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_set_strict_posix[None](context: NullablePointer[_GOptionContext] tag, strictposix: I32)
use @g_option_context_get_strict_posix[I32](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_add_main_entries[None](context: NullablePointer[_GOptionContext] tag, entries: NullablePointer[_GOptionEntry] tag, translationdomain: Pointer[U8] tag)
use @g_option_context_parse[I32](context: NullablePointer[_GOptionContext] tag, argc: Pointer[I32] tag, argv: Pointer[Pointer[Pointer[U8]]], gerror: Pointer[NullablePointer[_GError]] tag)
use @g_option_context_parse_strv[I32](context: NullablePointer[_GOptionContext] tag, arguments: Pointer[Pointer[Pointer[U8]]], gerror: Pointer[NullablePointer[_GError]] tag)
use @g_option_context_set_translate_func[None](context: NullablePointer[_GOptionContext] tag, func: Pointer[None] tag, data: Pointer[None] tag, destroynotify: Pointer[None] tag)
use @g_option_context_set_translation_domain[None](context: NullablePointer[_GOptionContext] tag, domain: Pointer[U8] tag)
use @g_option_context_add_group[None](context: NullablePointer[_GOptionContext] tag, group: NullablePointer[_GOptionGroup] tag)
use @g_option_context_set_main_group[None](context: NullablePointer[_GOptionContext] tag, group: NullablePointer[_GOptionGroup] tag)
use @g_option_context_get_main_group[NullablePointer[_GOptionGroup]](context: NullablePointer[_GOptionContext] tag)
use @g_option_context_get_help[Pointer[U8]](context: NullablePointer[_GOptionContext] tag, mainhelp: I32, group: NullablePointer[_GOptionGroup] tag)
use @g_option_group_new[NullablePointer[_GOptionGroup]](name: Pointer[U8] tag, description: Pointer[U8] tag, helpdescription: Pointer[U8] tag, userdata: Pointer[None] tag, destroy: Pointer[None] tag)
use @g_option_group_set_parse_hooks[None](group: NullablePointer[_GOptionGroup] tag, preparsefunc: Pointer[None] tag, postparsefunc: Pointer[None] tag)
use @g_option_group_set_error_hook[None](group: NullablePointer[_GOptionGroup] tag, errorfunc: Pointer[None] tag)
use @g_option_group_free[None](group: NullablePointer[_GOptionGroup] tag)
use @g_option_group_ref[NullablePointer[_GOptionGroup]](group: NullablePointer[_GOptionGroup] tag)
use @g_option_group_unref[None](group: NullablePointer[_GOptionGroup] tag)
use @g_option_group_add_entries[None](group: NullablePointer[_GOptionGroup] tag, entries: NullablePointer[_GOptionEntry] tag)
use @g_option_group_set_translate_func[None](group: NullablePointer[_GOptionGroup] tag, func: Pointer[None] tag, data: Pointer[None] tag, destroynotify: Pointer[None] tag)
use @g_option_group_set_translation_domain[None](group: NullablePointer[_GOptionGroup] tag, domain: Pointer[U8] tag)
use @g_pattern_spec_new[NullablePointer[_GPatternSpec]](pattern: Pointer[U8] tag)
use @g_pattern_spec_free[None](pspec: NullablePointer[_GPatternSpec] tag)
use @g_pattern_spec_copy[NullablePointer[_GPatternSpec]](pspec: NullablePointer[_GPatternSpec] tag)
use @g_pattern_spec_equal[I32](pspec1: NullablePointer[_GPatternSpec] tag, pspec2: NullablePointer[_GPatternSpec] tag)
use @g_pattern_spec_match[I32](pspec: NullablePointer[_GPatternSpec] tag, stringlength: U64, string: Pointer[U8] tag, stringreversed: Pointer[U8] tag)
use @g_pattern_spec_match_string[I32](pspec: NullablePointer[_GPatternSpec] tag, string: Pointer[U8] tag)
use @g_pattern_match[I32](pspec: NullablePointer[_GPatternSpec] tag, stringlength: U32, string: Pointer[U8] tag, stringreversed: Pointer[U8] tag)
use @g_pattern_match_string[I32](pspec: NullablePointer[_GPatternSpec] tag, string: Pointer[U8] tag)
use @g_pattern_match_simple[I32](pattern: Pointer[U8] tag, string: Pointer[U8] tag)
use @g_spaced_primes_closest[U32](num: U32)
use @g_qsort_with_data[None](pbase: Pointer[None] tag, totalelems: I32, size: U64, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_queue_new[NullablePointer[_GQueue]]()
use @g_queue_free[None](queue: NullablePointer[_GQueue] tag)
use @g_queue_free_full[None](queue: NullablePointer[_GQueue] tag, freefunc: Pointer[None] tag)
use @g_queue_init[None](queue: NullablePointer[_GQueue] tag)
use @g_queue_clear[None](queue: NullablePointer[_GQueue] tag)
use @g_queue_is_empty[I32](queue: NullablePointer[_GQueue] tag)
use @g_queue_clear_full[None](queue: NullablePointer[_GQueue] tag, freefunc: Pointer[None] tag)
use @g_queue_get_length[U32](queue: NullablePointer[_GQueue] tag)
use @g_queue_reverse[None](queue: NullablePointer[_GQueue] tag)
use @g_queue_copy[NullablePointer[_GQueue]](queue: NullablePointer[_GQueue] tag)
use @g_queue_foreach[None](queue: NullablePointer[_GQueue] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_queue_find[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag)
use @g_queue_find_custom[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag, func: Pointer[None] tag)
use @g_queue_sort[None](queue: NullablePointer[_GQueue] tag, comparefunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_queue_push_head[None](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag)
use @g_queue_push_tail[None](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag)
use @g_queue_push_nth[None](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag, n: I32)
use @g_queue_pop_head[Pointer[None]](queue: NullablePointer[_GQueue] tag)
use @g_queue_pop_tail[Pointer[None]](queue: NullablePointer[_GQueue] tag)
use @g_queue_pop_nth[Pointer[None]](queue: NullablePointer[_GQueue] tag, n: U32)
use @g_queue_peek_head[Pointer[None]](queue: NullablePointer[_GQueue] tag)
use @g_queue_peek_tail[Pointer[None]](queue: NullablePointer[_GQueue] tag)
use @g_queue_peek_nth[Pointer[None]](queue: NullablePointer[_GQueue] tag, n: U32)
use @g_queue_index[I32](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag)
use @g_queue_remove[I32](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag)
use @g_queue_remove_all[U32](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag)
use @g_queue_insert_before[None](queue: NullablePointer[_GQueue] tag, sibling: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_queue_insert_before_link[None](queue: NullablePointer[_GQueue] tag, sibling: NullablePointer[_GList] tag, link: NullablePointer[_GList] tag)
use @g_queue_insert_after[None](queue: NullablePointer[_GQueue] tag, sibling: NullablePointer[_GList] tag, data: Pointer[None] tag)
use @g_queue_insert_after_link[None](queue: NullablePointer[_GQueue] tag, sibling: NullablePointer[_GList] tag, link: NullablePointer[_GList] tag)
use @g_queue_insert_sorted[None](queue: NullablePointer[_GQueue] tag, data: Pointer[None] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_queue_push_head_link[None](queue: NullablePointer[_GQueue] tag, link: NullablePointer[_GList] tag)
use @g_queue_push_tail_link[None](queue: NullablePointer[_GQueue] tag, link: NullablePointer[_GList] tag)
use @g_queue_push_nth_link[None](queue: NullablePointer[_GQueue] tag, n: I32, link: NullablePointer[_GList] tag)
use @g_queue_pop_head_link[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag)
use @g_queue_pop_tail_link[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag)
use @g_queue_pop_nth_link[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag, n: U32)
use @g_queue_peek_head_link[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag)
use @g_queue_peek_tail_link[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag)
use @g_queue_peek_nth_link[NullablePointer[_GList]](queue: NullablePointer[_GQueue] tag, n: U32)
use @g_queue_link_index[I32](queue: NullablePointer[_GQueue] tag, link: NullablePointer[_GList] tag)
use @g_queue_unlink[None](queue: NullablePointer[_GQueue] tag, link: NullablePointer[_GList] tag)
use @g_queue_delete_link[None](queue: NullablePointer[_GQueue] tag, link: NullablePointer[_GList] tag)
use @g_rand_new_with_seed[NullablePointer[_GRand]](seed: U32)
use @g_rand_new_with_seed_array[NullablePointer[_GRand]](seed: Pointer[U32] tag, seedlength: U32)
use @g_rand_new[NullablePointer[_GRand]]()
use @g_rand_free[None](rand: NullablePointer[_GRand] tag)
use @g_rand_copy[NullablePointer[_GRand]](rand: NullablePointer[_GRand] tag)
use @g_rand_set_seed[None](rand: NullablePointer[_GRand] tag, seed: U32)
use @g_rand_set_seed_array[None](rand: NullablePointer[_GRand] tag, seed: Pointer[U32] tag, seedlength: U32)
use @g_rand_int[U32](rand: NullablePointer[_GRand] tag)
use @g_rand_int_range[I32](rand: NullablePointer[_GRand] tag, begin: I32, gend: I32)
use @g_rand_double[F64](rand: NullablePointer[_GRand] tag)
use @g_rand_double_range[F64](rand: NullablePointer[_GRand] tag, begin: F64, gend: F64)
use @g_random_set_seed[None](seed: U32)
use @g_random_int[U32]()
use @g_random_int_range[I32](begin: I32, gend: I32)
use @g_random_double[F64]()
use @g_random_double_range[F64](begin: F64, gend: F64)
use @g_rc_box_alloc[Pointer[None]](blocksize: U64)
use @g_rc_box_alloc0[Pointer[None]](blocksize: U64)
use @g_rc_box_dup[Pointer[None]](blocksize: U64, memblock: Pointer[None] tag)
use @g_rc_box_acquire[Pointer[None]](memblock: Pointer[None] tag)
use @g_rc_box_release[None](memblock: Pointer[None] tag)
use @g_rc_box_release_full[None](memblock: Pointer[None] tag, clearfunc: Pointer[None] tag)
use @g_rc_box_get_size[U64](memblock: Pointer[None] tag)
use @g_atomic_rc_box_alloc[Pointer[None]](blocksize: U64)
use @g_atomic_rc_box_alloc0[Pointer[None]](blocksize: U64)
use @g_atomic_rc_box_dup[Pointer[None]](blocksize: U64, memblock: Pointer[None] tag)
use @g_atomic_rc_box_acquire[Pointer[None]](memblock: Pointer[None] tag)
use @g_atomic_rc_box_release[None](memblock: Pointer[None] tag)
use @g_atomic_rc_box_release_full[None](memblock: Pointer[None] tag, clearfunc: Pointer[None] tag)
use @g_atomic_rc_box_get_size[U64](memblock: Pointer[None] tag)
use @g_ref_count_init[None](rc: Pointer[I32] tag)
use @g_ref_count_inc[None](rc: Pointer[I32] tag)
use @g_ref_count_dec[I32](rc: Pointer[I32] tag)
use @g_ref_count_compare[I32](rc: Pointer[I32] tag, gval: I32)
use @g_atomic_ref_count_init[None](arc: Pointer[I32] tag)
use @g_atomic_ref_count_inc[None](arc: Pointer[I32] tag)
use @g_atomic_ref_count_dec[I32](arc: Pointer[I32] tag)
use @g_atomic_ref_count_compare[I32](arc: Pointer[I32] tag, gval: I32)
use @g_ref_string_new[Pointer[U8]](str: Pointer[U8] tag)
use @g_ref_string_new_len[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_ref_string_new_intern[Pointer[U8]](str: Pointer[U8] tag)
use @g_ref_string_acquire[Pointer[U8]](str: Pointer[U8] tag)
use @g_ref_string_release[None](str: Pointer[U8] tag)
use @g_ref_string_length[U64](str: Pointer[U8] tag)
use @g_regex_error_quark[U32]()
use @g_regex_new[NullablePointer[_GRegex]](pattern: Pointer[U8] tag, compileoptions: I32, matchoptions: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_ref[NullablePointer[_GRegex]](regex: NullablePointer[_GRegex] tag)
use @g_regex_unref[None](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_pattern[Pointer[U8]](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_max_backref[I32](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_capture_count[I32](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_has_cr_or_lf[I32](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_max_lookbehind[I32](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_string_number[I32](regex: NullablePointer[_GRegex] tag, name: Pointer[U8] tag)
use @g_regex_escape_string[Pointer[U8]](string: Pointer[U8] tag, length: I32)
use @g_regex_escape_nul[Pointer[U8]](string: Pointer[U8] tag, length: I32)
use @g_regex_get_compile_flags[I32](regex: NullablePointer[_GRegex] tag)
use @g_regex_get_match_flags[I32](regex: NullablePointer[_GRegex] tag)
use @g_regex_match_simple[I32](pattern: Pointer[U8] tag, string: Pointer[U8] tag, compileoptions: I32, matchoptions: I32)
use @g_regex_match[I32](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, matchoptions: I32, matchinfo: Pointer[NullablePointer[_GMatchInfo]] tag)
use @g_regex_match_full[I32](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, stringlen: I64, startposition: I32, matchoptions: I32, matchinfo: Pointer[NullablePointer[_GMatchInfo]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_match_all[I32](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, matchoptions: I32, matchinfo: Pointer[NullablePointer[_GMatchInfo]] tag)
use @g_regex_match_all_full[I32](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, stringlen: I64, startposition: I32, matchoptions: I32, matchinfo: Pointer[NullablePointer[_GMatchInfo]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_split_simple[Pointer[Pointer[U8]]](pattern: Pointer[U8] tag, string: Pointer[U8] tag, compileoptions: I32, matchoptions: I32)
use @g_regex_split[Pointer[Pointer[U8]]](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, matchoptions: I32)
use @g_regex_split_full[Pointer[Pointer[U8]]](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, stringlen: I64, startposition: I32, matchoptions: I32, maxtokens: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_replace[Pointer[U8]](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, stringlen: I64, startposition: I32, replacement: Pointer[U8] tag, matchoptions: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_replace_literal[Pointer[U8]](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, stringlen: I64, startposition: I32, replacement: Pointer[U8] tag, matchoptions: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_replace_eval[Pointer[U8]](regex: NullablePointer[_GRegex] tag, string: Pointer[U8] tag, stringlen: I64, startposition: I32, matchoptions: I32, eval: Pointer[None] tag, userdata: Pointer[None] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_regex_check_replacement[I32](replacement: Pointer[U8] tag, hasreferences: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_match_info_get_regex[NullablePointer[_GRegex]](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_get_string[Pointer[U8]](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_ref[NullablePointer[_GMatchInfo]](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_unref[None](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_free[None](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_next[I32](matchinfo: NullablePointer[_GMatchInfo] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_match_info_matches[I32](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_get_match_count[I32](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_is_partial_match[I32](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_match_info_expand_references[Pointer[U8]](matchinfo: NullablePointer[_GMatchInfo] tag, stringtoexpand: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_match_info_fetch[Pointer[U8]](matchinfo: NullablePointer[_GMatchInfo] tag, matchnum: I32)
use @g_match_info_fetch_pos[I32](matchinfo: NullablePointer[_GMatchInfo] tag, matchnum: I32, startpos: Pointer[I32] tag, endpos: Pointer[I32] tag)
use @g_match_info_fetch_named[Pointer[U8]](matchinfo: NullablePointer[_GMatchInfo] tag, name: Pointer[U8] tag)
use @g_match_info_fetch_named_pos[I32](matchinfo: NullablePointer[_GMatchInfo] tag, name: Pointer[U8] tag, startpos: Pointer[I32] tag, endpos: Pointer[I32] tag)
use @g_match_info_fetch_all[Pointer[Pointer[U8]]](matchinfo: NullablePointer[_GMatchInfo] tag)
use @g_scanner_new[NullablePointer[_GScanner]](configtempl: NullablePointer[_GScannerConfig] tag)
use @g_scanner_destroy[None](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_input_file[None](scanner: NullablePointer[_GScanner] tag, inputfd: I32)
use @g_scanner_sync_file_offset[None](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_input_text[None](scanner: NullablePointer[_GScanner] tag, text: Pointer[U8] tag, textlen: U32)
use @g_scanner_get_next_token[I32](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_peek_next_token[I32](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_cur_token[I32](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_cur_value[None](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_cur_line[U32](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_cur_position[U32](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_eof[I32](scanner: NullablePointer[_GScanner] tag)
use @g_scanner_set_scope[U32](scanner: NullablePointer[_GScanner] tag, scopeid: U32)
use @g_scanner_scope_add_symbol[None](scanner: NullablePointer[_GScanner] tag, scopeid: U32, symbol: Pointer[U8] tag, value: Pointer[None] tag)
use @g_scanner_scope_remove_symbol[None](scanner: NullablePointer[_GScanner] tag, scopeid: U32, symbol: Pointer[U8] tag)
use @g_scanner_scope_lookup_symbol[Pointer[None]](scanner: NullablePointer[_GScanner] tag, scopeid: U32, symbol: Pointer[U8] tag)
use @g_scanner_scope_foreach_symbol[None](scanner: NullablePointer[_GScanner] tag, scopeid: U32, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_scanner_lookup_symbol[Pointer[None]](scanner: NullablePointer[_GScanner] tag, symbol: Pointer[U8] tag)
use @g_scanner_unexp_token[None](scanner: NullablePointer[_GScanner] tag, expectedtoken: I32, identifierspec: Pointer[U8] tag, symbolspec: Pointer[U8] tag, symbolname: Pointer[U8] tag, message: Pointer[U8] tag, iserror: I32)
use @g_sequence_new[NullablePointer[_GSequence]](datadestroy: Pointer[None] tag)
use @g_sequence_free[None](seq: NullablePointer[_GSequence] tag)
use @g_sequence_get_length[I32](seq: NullablePointer[_GSequence] tag)
use @g_sequence_foreach[None](seq: NullablePointer[_GSequence] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_sequence_foreach_range[None](begin: NullablePointer[_GSequenceNode] tag, gend: NullablePointer[_GSequenceNode] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_sequence_sort[None](seq: NullablePointer[_GSequence] tag, cmpfunc: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_sort_iter[None](seq: NullablePointer[_GSequence] tag, cmpfunc: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_is_empty[I32](seq: NullablePointer[_GSequence] tag)
use @g_sequence_get_begin_iter[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag)
use @g_sequence_get_end_iter[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag)
use @g_sequence_get_iter_at_pos[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, pos: I32)
use @g_sequence_append[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag)
use @g_sequence_prepend[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag)
use @g_sequence_insert_before[NullablePointer[_GSequenceNode]](iter: NullablePointer[_GSequenceNode] tag, data: Pointer[None] tag)
use @g_sequence_move[None](src: NullablePointer[_GSequenceNode] tag, dest: NullablePointer[_GSequenceNode] tag)
use @g_sequence_swap[None](a: NullablePointer[_GSequenceNode] tag, b: NullablePointer[_GSequenceNode] tag)
use @g_sequence_insert_sorted[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag, cmpfunc: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_insert_sorted_iter[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag, itercmp: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_sort_changed[None](iter: NullablePointer[_GSequenceNode] tag, cmpfunc: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_sort_changed_iter[None](iter: NullablePointer[_GSequenceNode] tag, itercmp: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_remove[None](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_remove_range[None](begin: NullablePointer[_GSequenceNode] tag, gend: NullablePointer[_GSequenceNode] tag)
use @g_sequence_move_range[None](dest: NullablePointer[_GSequenceNode] tag, begin: NullablePointer[_GSequenceNode] tag, gend: NullablePointer[_GSequenceNode] tag)
use @g_sequence_search[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag, cmpfunc: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_search_iter[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag, itercmp: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_lookup[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag, cmpfunc: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_lookup_iter[NullablePointer[_GSequenceNode]](seq: NullablePointer[_GSequence] tag, data: Pointer[None] tag, itercmp: Pointer[None] tag, cmpdata: Pointer[None] tag)
use @g_sequence_get[Pointer[None]](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_set[None](iter: NullablePointer[_GSequenceNode] tag, data: Pointer[None] tag)
use @g_sequence_iter_is_begin[I32](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_iter_is_end[I32](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_iter_next[NullablePointer[_GSequenceNode]](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_iter_prev[NullablePointer[_GSequenceNode]](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_iter_get_position[I32](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_iter_move[NullablePointer[_GSequenceNode]](iter: NullablePointer[_GSequenceNode] tag, delta: I32)
use @g_sequence_iter_get_sequence[NullablePointer[_GSequence]](iter: NullablePointer[_GSequenceNode] tag)
use @g_sequence_iter_compare[I32](a: NullablePointer[_GSequenceNode] tag, b: NullablePointer[_GSequenceNode] tag)
use @g_sequence_range_get_midpoint[NullablePointer[_GSequenceNode]](begin: NullablePointer[_GSequenceNode] tag, gend: NullablePointer[_GSequenceNode] tag)
use @g_shell_error_quark[U32]()
use @g_shell_quote[Pointer[U8]](unquotedstring: Pointer[U8] tag)
use @g_shell_unquote[Pointer[U8]](quotedstring: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_shell_parse_argv[I32](commandline: Pointer[U8] tag, argcp: Pointer[I32] tag, argvp: Pointer[Pointer[Pointer[U8]]], gerror: Pointer[NullablePointer[_GError]] tag)
use @g_slice_alloc[Pointer[None]](blocksize: U64)
use @g_slice_alloc0[Pointer[None]](blocksize: U64)
use @g_slice_copy[Pointer[None]](blocksize: U64, memblock: Pointer[None] tag)
use @g_slice_free1[None](blocksize: U64, memblock: Pointer[None] tag)
use @g_slice_free_chain_with_offset[None](blocksize: U64, memchain: Pointer[None] tag, nextoffset: U64)
use @g_slice_set_config[None](ckey: I32, value: I64)
use @g_slice_get_config[I64](ckey: I32)
use @g_slice_get_config_state[Pointer[I64]](ckey: I32, address: I64, nvalues: Pointer[U32] tag)
use @g_spawn_error_quark[U32]()
use @g_spawn_exit_error_quark[U32]()
use @g_spawn_async[I32](workingdirectory: Pointer[U8] tag, argv: Pointer[Pointer[U8]] tag, envp: Pointer[Pointer[U8]] tag, flags: I32, childsetup: Pointer[None] tag, userdata: Pointer[None] tag, childpid: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_async_with_pipes[I32](workingdirectory: Pointer[U8] tag, argv: Pointer[Pointer[U8]] tag, envp: Pointer[Pointer[U8]] tag, flags: I32, childsetup: Pointer[None] tag, userdata: Pointer[None] tag, childpid: Pointer[I32] tag, standardinput: Pointer[I32] tag, standardoutput: Pointer[I32] tag, standarderror: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_async_with_pipes_and_fds[I32](workingdirectory: Pointer[U8] tag, argv: Pointer[Pointer[U8]] tag, envp: Pointer[Pointer[U8]] tag, flags: I32, childsetup: Pointer[None] tag, userdata: Pointer[None] tag, stdinfd: I32, stdoutfd: I32, stderrfd: I32, sourcefds: Pointer[I32] tag, targetfds: Pointer[I32] tag, nfds: U64, childpidout: Pointer[I32] tag, stdinpipeout: Pointer[I32] tag, stdoutpipeout: Pointer[I32] tag, stderrpipeout: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_async_with_fds[I32](workingdirectory: Pointer[U8] tag, argv: Pointer[Pointer[U8]] tag, envp: Pointer[Pointer[U8]] tag, flags: I32, childsetup: Pointer[None] tag, userdata: Pointer[None] tag, childpid: Pointer[I32] tag, stdinfd: I32, stdoutfd: I32, stderrfd: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_sync[I32](workingdirectory: Pointer[U8] tag, argv: Pointer[Pointer[U8]] tag, envp: Pointer[Pointer[U8]] tag, flags: I32, childsetup: Pointer[None] tag, userdata: Pointer[None] tag, standardoutput: Pointer[Pointer[U8]] tag, standarderror: Pointer[Pointer[U8]] tag, waitstatus: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_command_line_sync[I32](commandline: Pointer[U8] tag, standardoutput: Pointer[Pointer[U8]] tag, standarderror: Pointer[Pointer[U8]] tag, waitstatus: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_command_line_async[I32](commandline: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_check_wait_status[I32](waitstatus: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_check_exit_status[I32](waitstatus: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_spawn_close_pid[None](pid: I32)
use @g_ascii_tolower[U8](c: U8)
use @g_ascii_toupper[U8](c: U8)
use @g_ascii_digit_value[I32](c: U8)
use @g_ascii_xdigit_value[I32](c: U8)
use @g_strdelimit[Pointer[U8]](string: Pointer[U8] tag, delimiters: Pointer[U8] tag, newdelimiter: U8)
use @g_strcanon[Pointer[U8]](string: Pointer[U8] tag, validchars: Pointer[U8] tag, substitutor: U8)
use @g_strerror[Pointer[U8]](errnum: I32)
use @g_strsignal[Pointer[U8]](signum: I32)
use @g_strreverse[Pointer[U8]](string: Pointer[U8] tag)
use @g_strlcpy[U64](dest: Pointer[U8] tag, src: Pointer[U8] tag, destsize: U64)
use @g_strlcat[U64](dest: Pointer[U8] tag, src: Pointer[U8] tag, destsize: U64)
use @g_strstr_len[Pointer[U8]](haystack: Pointer[U8] tag, haystacklen: I64, needle: Pointer[U8] tag)
use @g_strrstr[Pointer[U8]](haystack: Pointer[U8] tag, needle: Pointer[U8] tag)
use @g_strrstr_len[Pointer[U8]](haystack: Pointer[U8] tag, haystacklen: I64, needle: Pointer[U8] tag)
use @g_str_has_suffix[I32](str: Pointer[U8] tag, suffix: Pointer[U8] tag)
use @g_str_has_prefix[I32](str: Pointer[U8] tag, prefix: Pointer[U8] tag)
use @g_strtod[F64](nptr: Pointer[U8] tag, endptr: Pointer[Pointer[U8]] tag)
use @g_ascii_strtod[F64](nptr: Pointer[U8] tag, endptr: Pointer[Pointer[U8]] tag)
use @g_ascii_strtoull[U64](nptr: Pointer[U8] tag, endptr: Pointer[Pointer[U8]] tag, base: U32)
use @g_ascii_strtoll[I64](nptr: Pointer[U8] tag, endptr: Pointer[Pointer[U8]] tag, base: U32)
use @g_ascii_dtostr[Pointer[U8]](buffer: Pointer[U8] tag, buflen: I32, d: F64)
use @g_ascii_formatd[Pointer[U8]](buffer: Pointer[U8] tag, buflen: I32, format: Pointer[U8] tag, d: F64)
use @g_strchug[Pointer[U8]](string: Pointer[U8] tag)
use @g_strchomp[Pointer[U8]](string: Pointer[U8] tag)
use @g_ascii_strcasecmp[I32](s1: Pointer[U8] tag, s2: Pointer[U8] tag)
use @g_ascii_strncasecmp[I32](s1: Pointer[U8] tag, s2: Pointer[U8] tag, n: U64)
use @g_ascii_strdown[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_ascii_strup[Pointer[U8]](str: Pointer[U8] tag, len: I64)
use @g_str_is_ascii[I32](str: Pointer[U8] tag)
use @g_strcasecmp[I32](s1: Pointer[U8] tag, s2: Pointer[U8] tag)
use @g_strncasecmp[I32](s1: Pointer[U8] tag, s2: Pointer[U8] tag, n: U32)
use @g_strdown[Pointer[U8]](string: Pointer[U8] tag)
use @g_strup[Pointer[U8]](string: Pointer[U8] tag)
use @g_strdup[Pointer[U8]](str: Pointer[U8] tag)
use @g_strndup[Pointer[U8]](str: Pointer[U8] tag, n: U64)
use @g_strnfill[Pointer[U8]](length: U64, fillchar: U8)
use @g_strcompress[Pointer[U8]](source: Pointer[U8] tag)
use @g_strescape[Pointer[U8]](source: Pointer[U8] tag, exceptions: Pointer[U8] tag)
use @g_memdup[Pointer[None]](mem: Pointer[None] tag, bytesize: U32)
use @g_memdup2[Pointer[None]](mem: Pointer[None] tag, bytesize: U64)
use @g_strsplit[Pointer[Pointer[U8]]](string: Pointer[U8] tag, delimiter: Pointer[U8] tag, maxtokens: I32)
use @g_strsplit_set[Pointer[Pointer[U8]]](string: Pointer[U8] tag, delimiters: Pointer[U8] tag, maxtokens: I32)
use @g_strjoinv[Pointer[U8]](separator: Pointer[U8] tag, strarray: Pointer[Pointer[U8]] tag)
use @g_strfreev[None](strarray: Pointer[Pointer[U8]] tag)
use @g_strdupv[Pointer[Pointer[U8]]](strarray: Pointer[Pointer[U8]] tag)
use @g_strv_length[U32](strarray: Pointer[Pointer[U8]] tag)
use @g_stpcpy[Pointer[U8]](dest: Pointer[U8] tag, src: Pointer[U8] tag)
use @g_str_to_ascii[Pointer[U8]](str: Pointer[U8] tag, fromlocale: Pointer[U8] tag)
use @g_str_tokenize_and_fold[Pointer[Pointer[U8]]](string: Pointer[U8] tag, translitlocale: Pointer[U8] tag, asciialternates: Pointer[Pointer[Pointer[U8]]])
use @g_str_match_string[I32](searchterm: Pointer[U8] tag, potentialhit: Pointer[U8] tag, acceptalternates: I32)
use @g_strv_contains[I32](strv: Pointer[Pointer[U8]] tag, str: Pointer[U8] tag)
use @g_strv_equal[I32](strv1: Pointer[Pointer[U8]] tag, strv2: Pointer[Pointer[U8]] tag)
use @g_number_parser_error_quark[U32]()
use @g_ascii_string_to_signed[I32](str: Pointer[U8] tag, base: U32, min: I64, max: I64, outnum: Pointer[I64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_ascii_string_to_unsigned[I32](str: Pointer[U8] tag, base: U32, min: U64, max: U64, outnum: Pointer[U64] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_string_chunk_new[NullablePointer[_GStringChunk]](size: U64)
use @g_string_chunk_free[None](chunk: NullablePointer[_GStringChunk] tag)
use @g_string_chunk_clear[None](chunk: NullablePointer[_GStringChunk] tag)
use @g_string_chunk_insert[Pointer[U8]](chunk: NullablePointer[_GStringChunk] tag, string: Pointer[U8] tag)
use @g_string_chunk_insert_len[Pointer[U8]](chunk: NullablePointer[_GStringChunk] tag, string: Pointer[U8] tag, len: I64)
use @g_string_chunk_insert_const[Pointer[U8]](chunk: NullablePointer[_GStringChunk] tag, string: Pointer[U8] tag)
use @g_strv_builder_new[NullablePointer[_GStrvBuilder]]()
use @g_strv_builder_unref[None](builder: NullablePointer[_GStrvBuilder] tag)
use @g_strv_builder_ref[NullablePointer[_GStrvBuilder]](builder: NullablePointer[_GStrvBuilder] tag)
use @g_strv_builder_add[None](builder: NullablePointer[_GStrvBuilder] tag, value: Pointer[U8] tag)
use @g_strv_builder_addv[None](builder: NullablePointer[_GStrvBuilder] tag, value: Pointer[Pointer[U8]] tag)
use @g_strv_builder_end[Pointer[Pointer[U8]]](builder: NullablePointer[_GStrvBuilder] tag)
use @g_strcmp0[I32](str1: Pointer[U8] tag, str2: Pointer[U8] tag)
use @g_timer_new[NullablePointer[_GTimer]]()
use @g_timer_destroy[None](timer: NullablePointer[_GTimer] tag)
use @g_timer_start[None](timer: NullablePointer[_GTimer] tag)
use @g_timer_stop[None](timer: NullablePointer[_GTimer] tag)
use @g_timer_reset[None](timer: NullablePointer[_GTimer] tag)
use @g_timer_continue[None](timer: NullablePointer[_GTimer] tag)
use @g_timer_elapsed[F64](timer: NullablePointer[_GTimer] tag, microseconds: Pointer[U64] tag)
use @g_timer_is_active[I32](timer: NullablePointer[_GTimer] tag)
use @g_usleep[None](microseconds: U64)
use @g_time_val_add[None](time: NullablePointer[_GTimeVal] tag, microseconds: I64)
use @g_time_val_from_iso8601[I32](isodate: Pointer[U8] tag, time: NullablePointer[_GTimeVal] tag)
use @g_time_val_to_iso8601[Pointer[U8]](time: NullablePointer[_GTimeVal] tag)
use @g_trash_stack_push[None](stackp: Pointer[NullablePointer[_GTrashStack]] tag, datap: Pointer[None] tag)
use @g_trash_stack_pop[Pointer[None]](stackp: Pointer[NullablePointer[_GTrashStack]] tag)
use @g_trash_stack_peek[Pointer[None]](stackp: Pointer[NullablePointer[_GTrashStack]] tag)
use @g_trash_stack_height[U32](stackp: Pointer[NullablePointer[_GTrashStack]] tag)
use @g_tree_new[NullablePointer[_GTree]](keycomparefunc: Pointer[None] tag)
use @g_tree_new_with_data[NullablePointer[_GTree]](keycomparefunc: Pointer[None] tag, keycomparedata: Pointer[None] tag)
use @g_tree_new_full[NullablePointer[_GTree]](keycomparefunc: Pointer[None] tag, keycomparedata: Pointer[None] tag, keydestroyfunc: Pointer[None] tag, valuedestroyfunc: Pointer[None] tag)
use @g_tree_node_first[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag)
use @g_tree_node_last[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag)
use @g_tree_node_previous[NullablePointer[_GTreeNode]](node: NullablePointer[_GTreeNode] tag)
use @g_tree_node_next[NullablePointer[_GTreeNode]](node: NullablePointer[_GTreeNode] tag)
use @g_tree_ref[NullablePointer[_GTree]](tree: NullablePointer[_GTree] tag)
use @g_tree_unref[None](tree: NullablePointer[_GTree] tag)
use @g_tree_destroy[None](tree: NullablePointer[_GTree] tag)
use @g_tree_insert_node[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag, value: Pointer[None] tag)
use @g_tree_insert[None](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag, value: Pointer[None] tag)
use @g_tree_replace_node[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag, value: Pointer[None] tag)
use @g_tree_replace[None](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag, value: Pointer[None] tag)
use @g_tree_remove[I32](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag)
use @g_tree_remove_all[None](tree: NullablePointer[_GTree] tag)
use @g_tree_steal[I32](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag)
use @g_tree_node_key[Pointer[None]](node: NullablePointer[_GTreeNode] tag)
use @g_tree_node_value[Pointer[None]](node: NullablePointer[_GTreeNode] tag)
use @g_tree_lookup_node[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag)
use @g_tree_lookup[Pointer[None]](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag)
use @g_tree_lookup_extended[I32](tree: NullablePointer[_GTree] tag, lookupkey: Pointer[None] tag, origkey: NullablePointer[Pointer[None]] tag, value: NullablePointer[Pointer[None]] tag)
use @g_tree_foreach[None](tree: NullablePointer[_GTree] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_tree_foreach_node[None](tree: NullablePointer[_GTree] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_tree_traverse[None](tree: NullablePointer[_GTree] tag, traversefunc: Pointer[None] tag, traversetype: I32, userdata: Pointer[None] tag)
use @g_tree_search_node[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag, searchfunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_tree_search[Pointer[None]](tree: NullablePointer[_GTree] tag, searchfunc: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_tree_lower_bound[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag)
use @g_tree_upper_bound[NullablePointer[_GTreeNode]](tree: NullablePointer[_GTree] tag, key: Pointer[None] tag)
use @g_tree_height[I32](tree: NullablePointer[_GTree] tag)
use @g_tree_nnodes[I32](tree: NullablePointer[_GTree] tag)
use @g_uri_ref[NullablePointer[_GUri]](uri: NullablePointer[_GUri] tag)
use @g_uri_unref[None](uri: NullablePointer[_GUri] tag)
use @g_uri_split[I32](uriref: Pointer[U8] tag, flags: I32, scheme: Pointer[Pointer[U8]] tag, userinfo: Pointer[Pointer[U8]] tag, host: Pointer[Pointer[U8]] tag, port: Pointer[I32] tag, path: Pointer[Pointer[U8]] tag, query: Pointer[Pointer[U8]] tag, fragment: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_split_with_user[I32](uriref: Pointer[U8] tag, flags: I32, scheme: Pointer[Pointer[U8]] tag, user: Pointer[Pointer[U8]] tag, password: Pointer[Pointer[U8]] tag, authparams: Pointer[Pointer[U8]] tag, host: Pointer[Pointer[U8]] tag, port: Pointer[I32] tag, path: Pointer[Pointer[U8]] tag, query: Pointer[Pointer[U8]] tag, fragment: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_split_network[I32](uristring: Pointer[U8] tag, flags: I32, scheme: Pointer[Pointer[U8]] tag, host: Pointer[Pointer[U8]] tag, port: Pointer[I32] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_is_valid[I32](uristring: Pointer[U8] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_join[Pointer[U8]](flags: I32, scheme: Pointer[U8] tag, userinfo: Pointer[U8] tag, host: Pointer[U8] tag, port: I32, path: Pointer[U8] tag, query: Pointer[U8] tag, fragment: Pointer[U8] tag)
use @g_uri_join_with_user[Pointer[U8]](flags: I32, scheme: Pointer[U8] tag, user: Pointer[U8] tag, password: Pointer[U8] tag, authparams: Pointer[U8] tag, host: Pointer[U8] tag, port: I32, path: Pointer[U8] tag, query: Pointer[U8] tag, fragment: Pointer[U8] tag)
use @g_uri_parse[NullablePointer[_GUri]](uristring: Pointer[U8] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_parse_relative[NullablePointer[_GUri]](baseuri: NullablePointer[_GUri] tag, uriref: Pointer[U8] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_resolve_relative[Pointer[U8]](baseuristring: Pointer[U8] tag, uriref: Pointer[U8] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_build[NullablePointer[_GUri]](flags: I32, scheme: Pointer[U8] tag, userinfo: Pointer[U8] tag, host: Pointer[U8] tag, port: I32, path: Pointer[U8] tag, query: Pointer[U8] tag, fragment: Pointer[U8] tag)
use @g_uri_build_with_user[NullablePointer[_GUri]](flags: I32, scheme: Pointer[U8] tag, user: Pointer[U8] tag, password: Pointer[U8] tag, authparams: Pointer[U8] tag, host: Pointer[U8] tag, port: I32, path: Pointer[U8] tag, query: Pointer[U8] tag, fragment: Pointer[U8] tag)
use @g_uri_to_string[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_to_string_partial[Pointer[U8]](uri: NullablePointer[_GUri] tag, flags: I32)
use @g_uri_get_scheme[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_userinfo[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_user[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_password[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_auth_params[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_host[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_port[I32](uri: NullablePointer[_GUri] tag)
use @g_uri_get_path[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_query[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_fragment[Pointer[U8]](uri: NullablePointer[_GUri] tag)
use @g_uri_get_flags[I32](uri: NullablePointer[_GUri] tag)
use @g_uri_parse_params[NullablePointer[_GHashTable]](params: Pointer[U8] tag, length: I64, separators: Pointer[U8] tag, flags: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_params_iter_init[None](iter: NullablePointer[_GUriParamsIter] tag, params: Pointer[U8] tag, length: I64, separators: Pointer[U8] tag, flags: I32)
use @g_uri_params_iter_next[I32](iter: NullablePointer[_GUriParamsIter] tag, attribute: Pointer[Pointer[U8]] tag, value: Pointer[Pointer[U8]] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_error_quark[U32]()
use @g_uri_unescape_string[Pointer[U8]](escapedstring: Pointer[U8] tag, illegalcharacters: Pointer[U8] tag)
use @g_uri_unescape_segment[Pointer[U8]](escapedstring: Pointer[U8] tag, escapedstringend: Pointer[U8] tag, illegalcharacters: Pointer[U8] tag)
use @g_uri_parse_scheme[Pointer[U8]](uri: Pointer[U8] tag)
use @g_uri_peek_scheme[Pointer[U8]](uri: Pointer[U8] tag)
use @g_uri_escape_string[Pointer[U8]](unescaped: Pointer[U8] tag, reservedcharsallowed: Pointer[U8] tag, allowutf8: I32)
use @g_uri_unescape_bytes[NullablePointer[_GBytes]](escapedstring: Pointer[U8] tag, length: I64, illegalcharacters: Pointer[U8] tag, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_uri_escape_bytes[Pointer[U8]](unescaped: Pointer[U8] tag, length: U64, reservedcharsallowed: Pointer[U8] tag)
use @g_uuid_string_is_valid[I32](str: Pointer[U8] tag)
use @g_uuid_string_random[Pointer[U8]]()
use @glib_check_version[Pointer[U8]](requiredmajor: U32, requiredminor: U32, requiredmicro: U32)
use @g_mem_chunk_new[NullablePointer[_GMemChunk]](name: Pointer[U8] tag, atomsize: I32, areasize: U64, gtype: I32)
use @g_mem_chunk_destroy[None](memchunk: NullablePointer[_GMemChunk] tag)
use @g_mem_chunk_alloc[Pointer[None]](memchunk: NullablePointer[_GMemChunk] tag)
use @g_mem_chunk_alloc0[Pointer[None]](memchunk: NullablePointer[_GMemChunk] tag)
use @g_mem_chunk_free[None](memchunk: NullablePointer[_GMemChunk] tag, mem: Pointer[None] tag)
use @g_mem_chunk_clean[None](memchunk: NullablePointer[_GMemChunk] tag)
use @g_mem_chunk_reset[None](memchunk: NullablePointer[_GMemChunk] tag)
use @g_mem_chunk_print[None](memchunk: NullablePointer[_GMemChunk] tag)
use @g_mem_chunk_info[None]()
use @g_blow_chunks[None]()
use @g_allocator_new[NullablePointer[_GAllocator]](name: Pointer[U8] tag, npreallocs: U32)
use @g_allocator_free[None](allocator: NullablePointer[_GAllocator] tag)
use @g_list_push_allocator[None](allocator: NullablePointer[_GAllocator] tag)
use @g_list_pop_allocator[None]()
use @g_slist_push_allocator[None](allocator: NullablePointer[_GAllocator] tag)
use @g_slist_pop_allocator[None]()
use @g_node_push_allocator[None](allocator: NullablePointer[_GAllocator] tag)
use @g_node_pop_allocator[None]()
use @g_cache_new[NullablePointer[_GCache]](valuenewfunc: Pointer[None] tag, valuedestroyfunc: Pointer[None] tag, keydupfunc: Pointer[None] tag, keydestroyfunc: Pointer[None] tag, hashkeyfunc: Pointer[None] tag, hashvaluefunc: Pointer[None] tag, keyequalfunc: Pointer[None] tag)
use @g_cache_destroy[None](cache: NullablePointer[_GCache] tag)
use @g_cache_insert[Pointer[None]](cache: NullablePointer[_GCache] tag, key: Pointer[None] tag)
use @g_cache_remove[None](cache: NullablePointer[_GCache] tag, value: Pointer[None] tag)
use @g_cache_key_foreach[None](cache: NullablePointer[_GCache] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_cache_value_foreach[None](cache: NullablePointer[_GCache] tag, func: Pointer[None] tag, userdata: Pointer[None] tag)
use @g_completion_new[NullablePointer[_GCompletion]](func: Pointer[None] tag)
use @g_completion_add_items[None](cmp: NullablePointer[_GCompletion] tag, items: NullablePointer[_GList] tag)
use @g_completion_remove_items[None](cmp: NullablePointer[_GCompletion] tag, items: NullablePointer[_GList] tag)
use @g_completion_clear_items[None](cmp: NullablePointer[_GCompletion] tag)
use @g_completion_complete[NullablePointer[_GList]](cmp: NullablePointer[_GCompletion] tag, prefix: Pointer[U8] tag, newprefix: Pointer[Pointer[U8]] tag)
use @g_completion_complete_utf8[NullablePointer[_GList]](cmp: NullablePointer[_GCompletion] tag, prefix: Pointer[U8] tag, newprefix: Pointer[Pointer[U8]] tag)
use @g_completion_set_compare[None](cmp: NullablePointer[_GCompletion] tag, strncmpfunc: Pointer[None] tag)
use @g_completion_free[None](cmp: NullablePointer[_GCompletion] tag)
use @g_relation_new[NullablePointer[_GRelation]](fields: I32)
use @g_relation_destroy[None](relation: NullablePointer[_GRelation] tag)
use @g_relation_index[None](relation: NullablePointer[_GRelation] tag, field: I32, hashfunc: Pointer[None] tag, keyequalfunc: Pointer[None] tag)
use @g_relation_delete[I32](relation: NullablePointer[_GRelation] tag, key: Pointer[None] tag, field: I32)
use @g_relation_select[NullablePointer[_GTuples]](relation: NullablePointer[_GRelation] tag, key: Pointer[None] tag, field: I32)
use @g_relation_count[I32](relation: NullablePointer[_GRelation] tag, key: Pointer[None] tag, field: I32)
use @g_relation_print[None](relation: NullablePointer[_GRelation] tag)
use @g_tuples_destroy[None](tuples: NullablePointer[_GTuples] tag)
use @g_tuples_index[Pointer[None]](tuples: NullablePointer[_GTuples] tag, index: I32, field: I32)
use @g_thread_create[NullablePointer[_GThread]](func: Pointer[None] tag, data: Pointer[None] tag, joinable: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_thread_create_full[NullablePointer[_GThread]](func: Pointer[None] tag, data: Pointer[None] tag, stacksize: U64, joinable: I32, bound: I32, priority: I32, gerror: Pointer[NullablePointer[_GError]] tag)
use @g_thread_set_priority[None](thread: NullablePointer[_GThread] tag, priority: I32)
use @g_thread_foreach[None](threadfunc: Pointer[None] tag, userdata: Pointer[None] tag)
